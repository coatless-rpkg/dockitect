% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{dk_add_sysreqs}
\alias{dk_add_sysreqs}
\title{Add system requirements for R packages to a \code{dockerfile}}
\usage{
dk_add_sysreqs(dockerfile, packages, package_manager = "auto")
}
\arguments{
\item{dockerfile}{A \code{dockerfile} object}

\item{packages}{Character vector of package names}

\item{package_manager}{Package manager to use (default: \code{"auto"})}
}
\value{
An updated \code{dockerfile} object with system requirements added
}
\description{
Identifies and adds the necessary system requirements for R packages
to a \code{dockerfile} using the \code{pak} package to determine dependencies.
}
\details{
This function uses the pak package to determine the system requirements
for the specified R packages. It then formats the appropriate installation
commands for the detected package manager and adds them as \code{RUN} instructions
to the \code{dockerfile}.

The \code{pak} package must be installed for this function to work.
}
\examples{
\dontrun{
# Create a dockerfile
df <- dockerfile() |>
  dfi_from("rocker/r-ver:4.4.0")

# Add system requirements for packages
df <- dk_add_sysreqs(df, c("xml2", "RPostgreSQL", "rJava"))
}

}
\seealso{
\code{\link[=generate_pkg_install_cmd]{generate_pkg_install_cmd()}} for generating package installation commands &
\code{\link[=determine_package_manager]{determine_package_manager()}} for determining the package manager

Other utility functions: 
\code{\link{determine_linux_distribution}()},
\code{\link{determine_package_manager}()},
\code{\link{map_to_sysreqs_platform}()}
}
\concept{utility functions}
