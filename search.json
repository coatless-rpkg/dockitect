[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Joseph Balamuta. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2025). dockitect: Create Validate Dockerfiles Programmatically. R package version 0.0.1, https://github.com/coatless-rpkg/dockitect, https://r-pkg.thecoatlessprofessor.com/dockitect/.","code":"@Manual{,   title = {dockitect: Create and Validate Dockerfiles Programmatically},   author = {James Joseph Balamuta},   year = {2025},   note = {R package version 0.0.1, https://github.com/coatless-rpkg/dockitect},   url = {https://r-pkg.thecoatlessprofessor.com/dockitect/}, }"},{"path":"/index.html","id":"dockitect-","dir":"","previous_headings":"","what":"Create and Validate Dockerfiles Programmatically","title":"Create and Validate Dockerfiles Programmatically","text":"Create Validate Dockerfiles R dockitect R package programmatically creating, validating, managing Dockerfiles using pipe-friendly syntax. bridges gap R development containerization, enabling seamless Docker integration data science workflows. !IMPORTANT!IMPORTANT package currently prototype/experimental stage. yet available CRAN may bugs limitations.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create and Validate Dockerfiles Programmatically","text":"can install development version dockitect GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"coatless-rpkg/dockitect\")"},{"path":"/index.html","id":"design-philosophy","dir":"","previous_headings":"","what":"Design Philosophy","title":"Create and Validate Dockerfiles Programmatically","text":"make API intuitive discoverable, dockitect employs naming convention across functions. Understanding prefixes help navigate package find functions need: dfi_*() - Dockerfile instruction functions (e.g., dfi_from(), dfi_run()) dfm_*() - Dockerfile modification functions (e.g., dfm_add_line(), dfm_group_similar()) di_*() - Dockerignore functions (e.g., di_add(), di_remove()) dk_*() - Docker configuration/template functions (e.g., dk_from_session(), dk_template_shiny())","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create and Validate Dockerfiles Programmatically","text":"following examples demonstrate use dockitect various containerization scenarios. example showcases different aspects package’s functionality, basic Dockerfile creation advanced use cases.","code":""},{"path":"/index.html","id":"dockerfile-creation","dir":"","previous_headings":"Usage","what":"Dockerfile Creation","title":"Create and Validate Dockerfiles Programmatically","text":"Let’s start fundamentals. Creating Dockerfile typically involves specifying base image, installing dependencies, copying files, defining commands. dockitect, process becomes series intuitive pipe-chained functions. example, let’s create Dockerfile R script:","code":"library(dockitect)  # Create a basic Dockerfile for an R script dockerfile() |>   dfi_from(\"rocker/r-ver:4.2.3\") |>   dfi_label(maintainer = \"user@example.com\") |>   dfi_run(\"apt-get update && apt-get install -y libcurl4-openssl-dev\") |>   dfi_workdir(\"/app\") |>   dfi_copy(\"analysis.R\", \"/app/\") |>   dfi_cmd(\"Rscript analysis.R\") |>   write_dockerfile(\"Dockerfile\")"},{"path":"/index.html","id":"use-templates","dir":"","previous_headings":"Usage","what":"Use Templates","title":"Create and Validate Dockerfiles Programmatically","text":"dockitect includes specialized templates common R application types, saving time ensuring best practices followed. templates fully customizable provide solid foundation projects.","code":""},{"path":"/index.html","id":"shiny-application","dir":"","previous_headings":"Usage > Use Templates","what":"Shiny Application","title":"Create and Validate Dockerfiles Programmatically","text":"Creating Docker container Shiny application requires specific configurations ports, networking, dependencies. Shiny template handles details automatically. example, can create Dockerfile Shiny app proper port configuration:","code":"# Create a Dockerfile for a Shiny app dk_template_shiny(   r_version = \"4.2.3\",       # Specify R version   port = 3838,               # Expose Shiny port   app_dir = \"app/\"           # Location of app files ) |>   dfi_env(SHINY_HOST = \"0.0.0.0\") |>  # Configure Shiny to listen on all interfaces   write_dockerfile()"},{"path":"/index.html","id":"custom-templates","dir":"","previous_headings":"Usage","what":"Custom Templates","title":"Create and Validate Dockerfiles Programmatically","text":"dockitect includes templates common scenarios, organization might specific containerization patterns. template system extensible, allowing create, register, reuse templates throughout projects:","code":"# Create a custom template function my_template <- function(my_param = \"default\") {   dockerfile() |>     dfi_from(\"rocker/r-ver:4.2.3\") |>     dfi_run(paste0(\"echo \", my_param)) }  # Register the template dk_register_template(\"my_template\", my_template)  # Use the template dk_template_custom(\"my_template\", my_param = \"hello\") |>   write_dockerfile()"},{"path":"/index.html","id":"modify-existing-dockerfiles","dir":"","previous_headings":"Usage","what":"Modify Existing Dockerfiles","title":"Create and Validate Dockerfiles Programmatically","text":"Sometimes need modify existing Dockerfiles rather creating scratch. dockitect provides specialized functions reading, modifying, writing Dockerfiles, allowing precise changes without manual text editing:","code":"# Read an existing Dockerfile df <- read_dockerfile(\"path/to/Dockerfile\")  # Modify it df |>   dfm_add_line(\"RUN echo 'Hello World'\", after = 3) |> # Add a line after line 3   dfm_remove_line(5) |>                                # Remove line 5   dfm_group_similar() |>                               # Group similar commands (e.g., RUN)   write_dockerfile(\"Dockerfile.new\")                   # Write to a new file"},{"path":"/index.html","id":"create-and-manage-dockerignore","dir":"","previous_headings":"Usage","what":"Create and Manage .dockerignore","title":"Create and Validate Dockerfiles Programmatically","text":"Docker builds can slowed unnecessarily including large irrelevant files build context. properly configured .dockerignore file helps keep builds fast images small. dockitect makes easy create maintain .dockerignore file dockerignore().","code":"# Create a .dockerignore file with common patterns dockerignore() |>   di_add_common(include_git = TRUE, include_r = TRUE) |>  # Add common patterns for Git and R   di_add(\"*.log\") |>                                      # Add custom patterns   di_add(\"output/\") |>   write_dockerignore()"},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Create and Validate Dockerfiles Programmatically","text":"use dockitect research project, please consider citing :","code":"citation(\"dockitect\")"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Create and Validate Dockerfiles Programmatically","text":"AGPL (>=3)","code":""},{"path":"/reference/add_dockerfile_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a line to a dockerfile and update metadata — add_dockerfile_line","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"Add line dockerfile update metadata","code":""},{"path":"/reference/add_dockerfile_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"","code":"add_dockerfile_line(dockerfile, instruction, args)"},{"path":"/reference/add_dockerfile_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"dockerfile dockerfile object instruction Docker instruction (e.g., \"\", \"RUN\") args Arguments instruction","code":""},{"path":"/reference/add_dockerfile_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"Updated dockerfile object","code":""},{"path":"/reference/check_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an object is a dockerfile — check_dockerfile","title":"Ensure an object is a dockerfile — check_dockerfile","text":"Ensure object dockerfile","code":""},{"path":"/reference/check_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an object is a dockerfile — check_dockerfile","text":"","code":"check_dockerfile(dockerfile)"},{"path":"/reference/check_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an object is a dockerfile — check_dockerfile","text":"dockerfile Object check","code":""},{"path":"/reference/check_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an object is a dockerfile — check_dockerfile","text":"Invisible TRUE valid, error otherwise","code":""},{"path":"/reference/check_dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an object is a dockerignore — check_dockerignore","title":"Ensure an object is a dockerignore — check_dockerignore","text":"Ensure object dockerignore","code":""},{"path":"/reference/check_dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an object is a dockerignore — check_dockerignore","text":"","code":"check_dockerignore(dockerignore)"},{"path":"/reference/check_dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an object is a dockerignore — check_dockerignore","text":"dockerignore Object check","code":""},{"path":"/reference/check_dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an object is a dockerignore — check_dockerignore","text":"Invisible TRUE valid, error otherwise","code":""},{"path":"/reference/dfi_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ADD instruction to a dockerfile — dfi_add","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"Add ADD instruction dockerfile","code":""},{"path":"/reference/dfi_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"","code":"dfi_add(dockerfile, src, dest)"},{"path":"/reference/dfi_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"dockerfile dockerfile object src Source path (can URL) dest Destination path","code":""},{"path":"/reference/dfi_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ARG instruction to a dockerfile — dfi_arg","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"Add ARG instruction dockerfile","code":""},{"path":"/reference/dfi_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"","code":"dfi_arg(dockerfile, name, default = NULL)"},{"path":"/reference/dfi_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"dockerfile dockerfile object name Argument name default Default value (optional)","code":""},{"path":"/reference/dfi_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_cmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a CMD instruction to a dockerfile — dfi_cmd","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"Add CMD instruction dockerfile","code":""},{"path":"/reference/dfi_cmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"","code":"dfi_cmd(dockerfile, command)"},{"path":"/reference/dfi_cmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"dockerfile dockerfile object command Command run","code":""},{"path":"/reference/dfi_cmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_copy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a COPY instruction to a dockerfile — dfi_copy","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"Add COPY instruction dockerfile","code":""},{"path":"/reference/dfi_copy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"","code":"dfi_copy(dockerfile, src, dest, from = NULL)"},{"path":"/reference/dfi_copy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"dockerfile dockerfile object src Source path dest Destination path Build stage copy (optional)","code":""},{"path":"/reference/dfi_copy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_entrypoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"Add ENTRYPOINT instruction dockerfile","code":""},{"path":"/reference/dfi_entrypoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"","code":"dfi_entrypoint(dockerfile, entrypoint)"},{"path":"/reference/dfi_entrypoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"dockerfile dockerfile object entrypoint Entrypoint command","code":""},{"path":"/reference/dfi_entrypoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ENV instruction to a dockerfile — dfi_env","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"Add ENV instruction dockerfile","code":""},{"path":"/reference/dfi_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"","code":"dfi_env(dockerfile, ...)"},{"path":"/reference/dfi_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"dockerfile dockerfile object ... Named environment variables","code":""},{"path":"/reference/dfi_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_expose.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an EXPOSE instruction to a dockerfile — dfi_expose","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"Add EXPOSE instruction dockerfile","code":""},{"path":"/reference/dfi_expose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"","code":"dfi_expose(dockerfile, ports)"},{"path":"/reference/dfi_expose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"dockerfile dockerfile object ports Ports expose (numeric character)","code":""},{"path":"/reference/dfi_expose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_from.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a FROM instruction to a dockerfile — dfi_from","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"Add instruction dockerfile","code":""},{"path":"/reference/dfi_from.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"","code":"dfi_from(dockerfile, image, as = NULL)"},{"path":"/reference/dfi_from.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"dockerfile dockerfile object image Base image name Name build stage (optional)","code":""},{"path":"/reference/dfi_from.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_healthcheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"Add HEALTHCHECK instruction dockerfile","code":""},{"path":"/reference/dfi_healthcheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"","code":"dfi_healthcheck(   dockerfile,   command,   interval = NULL,   timeout = NULL,   start_period = NULL,   retries = NULL )"},{"path":"/reference/dfi_healthcheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"dockerfile dockerfile object command Health check command interval Interval checks (e.g., \"30s\") timeout Timeout checks (e.g., \"5s\") start_period Initial grace period (e.g., \"5s\") retries Number retries","code":""},{"path":"/reference/dfi_healthcheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a LABEL instruction to a dockerfile — dfi_label","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"Add LABEL instruction dockerfile","code":""},{"path":"/reference/dfi_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"","code":"dfi_label(dockerfile, ...)"},{"path":"/reference/dfi_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"dockerfile dockerfile object ... Named labels","code":""},{"path":"/reference/dfi_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_maintainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"Add MAINTAINER instruction dockerfile (deprecated)","code":""},{"path":"/reference/dfi_maintainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"","code":"dfi_maintainer(dockerfile, maintainer)"},{"path":"/reference/dfi_maintainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"dockerfile dockerfile object maintainer Maintainer info","code":""},{"path":"/reference/dfi_maintainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_onbuild.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"Add ONBUILD instruction dockerfile","code":""},{"path":"/reference/dfi_onbuild.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"","code":"dfi_onbuild(dockerfile, instruction)"},{"path":"/reference/dfi_onbuild.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"dockerfile dockerfile object instruction Instruction run build","code":""},{"path":"/reference/dfi_onbuild.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a RUN instruction to a dockerfile — dfi_run","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"Add RUN instruction dockerfile","code":""},{"path":"/reference/dfi_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"","code":"dfi_run(dockerfile, commands)"},{"path":"/reference/dfi_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"dockerfile dockerfile object commands Commands run","code":""},{"path":"/reference/dfi_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_shell.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a SHELL instruction to a dockerfile — dfi_shell","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"Add SHELL instruction dockerfile","code":""},{"path":"/reference/dfi_shell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"","code":"dfi_shell(dockerfile, shell)"},{"path":"/reference/dfi_shell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"dockerfile dockerfile object shell Shell command parameters","code":""},{"path":"/reference/dfi_shell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_stopsignal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"Add STOPSIGNAL instruction dockerfile","code":""},{"path":"/reference/dfi_stopsignal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"","code":"dfi_stopsignal(dockerfile, signal)"},{"path":"/reference/dfi_stopsignal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"dockerfile dockerfile object signal Signal stopping container","code":""},{"path":"/reference/dfi_stopsignal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a USER instruction to a dockerfile — dfi_user","title":"Add a USER instruction to a dockerfile — dfi_user","text":"Add USER instruction dockerfile","code":""},{"path":"/reference/dfi_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a USER instruction to a dockerfile — dfi_user","text":"","code":"dfi_user(dockerfile, user, group = NULL)"},{"path":"/reference/dfi_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a USER instruction to a dockerfile — dfi_user","text":"dockerfile dockerfile object user Username UID group Group GID (optional)","code":""},{"path":"/reference/dfi_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a USER instruction to a dockerfile — dfi_user","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a VOLUME instruction to a dockerfile — dfi_volume","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"Add VOLUME instruction dockerfile","code":""},{"path":"/reference/dfi_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"","code":"dfi_volume(dockerfile, paths)"},{"path":"/reference/dfi_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"dockerfile dockerfile object paths Path(s) create volumes","code":""},{"path":"/reference/dfi_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"Updated dockerfile object","code":""},{"path":"/reference/dfi_workdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"Add WORKDIR instruction dockerfile","code":""},{"path":"/reference/dfi_workdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"","code":"dfi_workdir(dockerfile, path)"},{"path":"/reference/dfi_workdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"dockerfile dockerfile object path Working directory path","code":""},{"path":"/reference/dfi_workdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"Updated dockerfile object","code":""},{"path":"/reference/dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new dockerfile object — dockerfile","title":"Create a new dockerfile object — dockerfile","text":"Create new dockerfile object","code":""},{"path":"/reference/dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new dockerfile object — dockerfile","text":"","code":"dockerfile()"},{"path":"/reference/dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new dockerfile object — dockerfile","text":"new, empty dockerfile object","code":""},{"path":"/reference/dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new dockerignore object — dockerignore","title":"Create a new dockerignore object — dockerignore","text":"Create new dockerignore object","code":""},{"path":"/reference/dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new dockerignore object — dockerignore","text":"","code":"dockerignore()"},{"path":"/reference/dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new dockerignore object — dockerignore","text":"new, empty dockerignore object","code":""},{"path":"/reference/dockitect-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"toolkit programmatically creating, modifying, validating Dockerfiles R. Provides pipe-friendly interface building Docker environments R sessions, packages, scripts, support templates automatic system requirement detection.","code":""},{"path":"/reference/dockitect-package.html","id":"dockerfile-instructions","dir":"Reference","previous_headings":"","what":"Dockerfile Instructions","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions adding Dockerfile instructions prefixed dfi_* follow pattern dfi_instruction(.dockerfile, ...).","code":""},{"path":"/reference/dockitect-package.html","id":"dockerfile-generators","dir":"Reference","previous_headings":"","what":"Dockerfile Generators","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions generating Dockerfiles various sources prefixed dk_* can create Dockerfiles R session, renv lockfile, DESCRIPTION file, R script.","code":""},{"path":"/reference/dockitect-package.html","id":"dockerfile-modifiers","dir":"Reference","previous_headings":"","what":"Dockerfile Modifiers","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions modifying Dockerfiles prefixed dfm_* allow adding, removing, replacing, moving lines within Dockerfile.","code":""},{"path":"/reference/dockitect-package.html","id":"dockerignore-management","dir":"Reference","previous_headings":"","what":"Dockerignore Management","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions managing .dockerignore files prefixed di_* allow adding removing patterns .dockerignore file.","code":""},{"path":[]},{"path":"/reference/dockitect-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Maintainer: James Joseph Balamuta james.balamuta@gmail.com (ORCID)","code":""},{"path":"/reference/get_package_manager.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the package manager from a base image — get_package_manager","title":"Detect the package manager from a base image — get_package_manager","text":"Detect package manager base image","code":""},{"path":"/reference/get_package_manager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the package manager from a base image — get_package_manager","text":"","code":"get_package_manager(base_image)"},{"path":"/reference/get_package_manager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the package manager from a base image — get_package_manager","text":"base_image Base image name","code":""},{"path":"/reference/get_package_manager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the package manager from a base image — get_package_manager","text":"Character string package manager type (\"apt\", \"yum\", \"apk\", etc.)","code":""},{"path":"/reference/has_instruction.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a dockerfile has a specific instruction — has_instruction","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"Check dockerfile specific instruction","code":""},{"path":"/reference/has_instruction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"","code":"has_instruction(dockerfile, instruction)"},{"path":"/reference/has_instruction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"dockerfile dockerfile object instruction Instruction check (e.g., \"\", \"RUN\")","code":""},{"path":"/reference/has_instruction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"TRUE instruction exists, FALSE otherwise","code":""},{"path":"/reference/is_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is a dockerfile — is_dockerfile","title":"Test if an object is a dockerfile — is_dockerfile","text":"Test object dockerfile Test object dockerfile","code":""},{"path":"/reference/is_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is a dockerfile — is_dockerfile","text":"","code":"is_dockerfile(x)  is_dockerfile(x)"},{"path":"/reference/is_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is a dockerfile — is_dockerfile","text":"x Object test","code":""},{"path":"/reference/is_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is a dockerfile — is_dockerfile","text":"TRUE x dockerfile, FALSE otherwise TRUE x dockerfile, FALSE otherwise","code":""},{"path":"/reference/is_dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is a dockerignore — is_dockerignore","title":"Test if an object is a dockerignore — is_dockerignore","text":"Test object dockerignore","code":""},{"path":"/reference/is_dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is a dockerignore — is_dockerignore","text":"","code":"is_dockerignore(x)"},{"path":"/reference/is_dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is a dockerignore — is_dockerignore","text":"x Object test","code":""},{"path":"/reference/is_dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is a dockerignore — is_dockerignore","text":"TRUE x dockerignore, FALSE otherwise","code":""}]
