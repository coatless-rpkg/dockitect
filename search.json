[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"/articles/getting-started-with-dockitect.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with dockitect","text":"dockitect R package simplifies Docker containerization R projects. provides programmatic, pipe-friendly interface creating, modifying, validating Docker configurations. vignette introduces key concepts features help get started containerizing R projects. new Docker, ’s quick overview relevant terms: Docker: platform enables package applications dependencies standardized units called containers Docker image: read-template instructions creating Docker container Docker container: runnable instance image Dockerfile: text file contains instructions building Docker image Dockerfile Instructions: Commands like , RUN, COPY, etc., define image","code":""},{"path":"/articles/getting-started-with-dockitect.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with dockitect","text":"can install development version dockitect GitHub: Access package loading :","code":"# install.packages(\"remotes\") remotes::install_github(\"coatless-rpkg/dockitect\") library(dockitect)"},{"path":"/articles/getting-started-with-dockitect.html","id":"package-overview","dir":"Articles","previous_headings":"","what":"Package Overview","title":"Getting Started with dockitect","text":"dockitect uses consistent naming convention make functions easy discover: dfi_*() functions add Dockerfile instructions (e.g., dfi_from(), dfi_run()) dfm_*() functions modify existing Dockerfiles (e.g., dfm_add_line()) di_*() functions manage .dockerignore patterns (e.g., di_add()) dk_*() functions create Dockerfiles templates existing projects","code":""},{"path":"/articles/getting-started-with-dockitect.html","id":"creating-basic-dockerfiles","dir":"Articles","previous_headings":"","what":"Creating Basic Dockerfiles","title":"Getting Started with dockitect","text":"’ll next turn attention creating Dockerfile programmatically. process involves creating Dockerfile object adding various instructions series pipe operations.","code":""},{"path":"/articles/getting-started-with-dockitect.html","id":"creating-a-dockerfile-object","dir":"Articles","previous_headings":"Creating Basic Dockerfiles","what":"Creating a Dockerfile Object","title":"Getting Started with dockitect","text":"Start creating new Dockerfile object: Congratulations! ’ve created first (empty) Dockerfile object. Now let’s add instructions.","code":"# Create a new Dockerfile object df <- dockerfile() print(df) #> Empty Dockerfile"},{"path":"/articles/getting-started-with-dockitect.html","id":"adding-docker-instructions","dir":"Articles","previous_headings":"Creating Basic Dockerfiles","what":"Adding Docker Instructions","title":"Getting Started with dockitect","text":"add instructions Dockerfile, use dfi_*() functions. example, set base image: can print Dockerfile see added instruction: Usually, ’ll add multiple instructions Dockerfile. Let’s add instructions Dockerfile can run script: example shows common Docker instructions: : Specifies base image (using Rocker Project’s R image) LABEL: Adds metadata image WORKDIR: Sets working directory inside container COPY: Copies files local system container CMD: Defines default command run starting container","code":"# Create a Dockerfile for an R script df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\")  # Base image with R 4.4.0 print(df) #> FROM rocker/r-ver:4.4.0 # Create a Dockerfile for an R script df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   # Base image with R 4.4.0   dfi_label(maintainer = \"user@example.com\") |>  # Add metadata   dfi_workdir(\"/app\") |>              # Set working directory   dfi_copy(\"analysis.R\", \"/app/\") |>  # Copy R script to container   dfi_cmd(\"Rscript /app/analysis.R\")  # Command to run when container starts  # Print the Dockerfile print(df) #> FROM rocker/r-ver:4.4.0 #> LABEL maintainer=\"user@example.com\" #> WORKDIR /app #> COPY analysis.R /app/ #> CMD [\"Rscript\",\"/app/analysis.R\"]"},{"path":"/articles/getting-started-with-dockitect.html","id":"adding-multiple-commands","dir":"Articles","previous_headings":"Creating Basic Dockerfiles","what":"Adding Multiple Commands","title":"Getting Started with dockitect","text":"RUN instructions multiple commands, can pass character vector:","code":"dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_run(c(     \"apt-get update\",     \"apt-get install -y libcurl4-openssl-dev\",     \"apt-get clean\"   )) #> FROM rocker/r-ver:4.4.0 #> RUN apt-get update #>     apt-get install -y libcurl4-openssl-dev #>     apt-get clean"},{"path":"/articles/getting-started-with-dockitect.html","id":"writing-to-a-file","dir":"Articles","previous_headings":"Creating Basic Dockerfiles","what":"Writing to a File","title":"Getting Started with dockitect","text":"save Dockerfile: default, write_dockerfile() formats multi-line instructions readability. [!IMPORTANT] multi-line instructions still work--progress!","code":"# Write to the default \"Dockerfile\" file write_dockerfile(df)  # Or specify a different filename write_dockerfile(df, \"path/to/Dockerfile\")"},{"path":"/articles/getting-started-with-dockitect.html","id":"using-templates","dir":"Articles","previous_headings":"","what":"Using Templates","title":"Getting Started with dockitect","text":"Creating Dockerfiles scratch can repetitive. dockitect provides templates common R project types follow best practices.","code":""},{"path":"/articles/getting-started-with-dockitect.html","id":"base-r-template","dir":"Articles","previous_headings":"Using Templates","what":"Base R Template","title":"Getting Started with dockitect","text":"template creates basic R environment:","code":"# Create a basic R image df_base <- dk_template_base(   r_version = \"4.4.0\",                     # Specify R version   additional_pkgs = c(\"dplyr\", \"ggplot2\")  # Add R packages ) #>  #> ✔ Updated metadata database: 5.49 MB in 10 files. #>  #> ℹ Updating metadata database #> ✔ Updating metadata database ... done #>  print(df_base) #> FROM rocker/r-ver:4.4.0 #> LABEL maintainer=\"runner\" description=\"Base R image for analysis\" #> WORKDIR /app #> RUN R -e \"install.packages(c('dplyr', 'ggplot2'), repos='https://cloud.r-project.org/')\" #> RUN mkdir -p /app/scripts /app/data /app/output #> VOLUME /app/data #> VOLUME /app/output #> CMD [\"R\",\"--no-save\"]"},{"path":"/articles/getting-started-with-dockitect.html","id":"shiny-app-template","dir":"Articles","previous_headings":"Using Templates","what":"Shiny App Template","title":"Getting Started with dockitect","text":"Shiny web applications:","code":"# Create a Shiny app image df_shiny <- dk_template_shiny(   r_version = \"4.4.0\",                     # Specify R version   port = 3838,                             # Port for Shiny server   additional_pkgs = c(\"dplyr\", \"ggplot2\")  # Add R packages ) print(df_shiny) #> FROM rocker/shiny:4.4.0 #> LABEL maintainer=\"runner\" description=\"Shiny application\" #> RUN apt-get update -y && apt-get install -y --no-install-recommends make zlib1g-dev && apt-get clean && rm -rf /var/lib/apt/lists/* #> RUN R -e \"install.packages(c('shiny', 'dplyr', 'ggplot2'), repos='https://cloud.r-project.org/')\" #> COPY . /srv/shiny-server/app #> WORKDIR /srv/shiny-server/app #> EXPOSE 3838 #> CMD [\"shiny-server\"]"},{"path":"/articles/getting-started-with-dockitect.html","id":"plumber-api-template","dir":"Articles","previous_headings":"Using Templates","what":"Plumber API Template","title":"Getting Started with dockitect","text":"RESTful APIs Plumber: [!NOTE] dk_template_plumber() function template still work--progress!","code":"# Create a Plumber API image df_plumber <- dk_template_plumber(   r_version = \"4.4.0\",  # Specify R version   port = 8000,  # Port for API   additional_pkgs = c(\"dplyr\", \"jsonlite\")  # Add R packages ) print(df_plumber)"},{"path":"/articles/getting-started-with-dockitect.html","id":"managing--dockerignore-files","dir":"Articles","previous_headings":"","what":"Managing .dockerignore Files","title":"Getting Started with dockitect","text":".dockerignore file tells Docker files exclude build context, improving build performance reducing image size.","code":""},{"path":"/articles/getting-started-with-dockitect.html","id":"creating-a--dockerignore-file","dir":"Articles","previous_headings":"Managing .dockerignore Files","what":"Creating a .dockerignore File","title":"Getting Started with dockitect","text":"dockitect, can create dockerignore object add patterns:","code":"# Create a new .dockerignore object di <- dockerignore()  # Add patterns to ignore di <- di |>   di_add(\"*.Rdata\") |>     # Ignore R data files   di_add(\"data/*.csv\") |>  # Ignore CSV files in data directory   dk_template_ignore_git() # Add common Git patterns  print(di) #> *.Rdata #> data/*.csv #> .git/ #> .gitignore #> .gitattributes #> .github/ #> .gitlab-ci.yml"},{"path":"/articles/getting-started-with-dockitect.html","id":"using-templates-for-common-patterns","dir":"Articles","previous_headings":"Managing .dockerignore Files","what":"Using Templates for Common Patterns","title":"Getting Started with dockitect","text":"dockitect includes templates common ignore patterns:","code":"# Create a template for R projects di_r <- dk_template_ignore_r() print(di_r) #> .Rproj.user/ #> .Rhistory #> .RData #> .Ruserdata #> *.Rproj #> *.rds #> .lintr #> *.Rcheck/ #> .Renviron #> .Rprofile #> renv/library/ #> renv/staging/ #> renv/python/ #> renv/local/ #> packrat/lib*/ #> packrat/src/  # Create a template for Git files di_git <- dk_template_ignore_git() print(di_git) #> .git/ #> .gitignore #> .gitattributes #> .github/ #> .gitlab-ci.yml"},{"path":"/articles/getting-started-with-dockitect.html","id":"combining-templates","dir":"Articles","previous_headings":"Managing .dockerignore Files","what":"Combining Templates","title":"Getting Started with dockitect","text":"can combine templates using c():","code":"# Combine templates di_combined <- c(   dk_template_ignore_git(),  # Git files   dk_template_ignore_r()     # R files )  # Add custom patterns di_combined <- di_add(di_combined, \"my-custom-pattern\") print(di_combined) #> .git/ #> .gitignore #> .gitattributes #> .github/ #> .gitlab-ci.yml #> .Rproj.user/ #> .Rhistory #> .RData #> .Ruserdata #> *.Rproj #> *.rds #> .lintr #> *.Rcheck/ #> .Renviron #> .Rprofile #> renv/library/ #> renv/staging/ #> renv/python/ #> renv/local/ #> packrat/lib*/ #> packrat/src/ #> my-custom-pattern"},{"path":"/articles/getting-started-with-dockitect.html","id":"writing-to-a-file-1","dir":"Articles","previous_headings":"Managing .dockerignore Files","what":"Writing to a File","title":"Getting Started with dockitect","text":"save .dockerignore:","code":"# Write to .dockerignore file write_dockerignore(di_combined)"},{"path":"/articles/getting-started-with-dockitect.html","id":"fin","dir":"Articles","previous_headings":"","what":"Fin","title":"Getting Started with dockitect","text":"vignette introduced basic functionality dockitect creating Dockerfile files managing .dockerignore files. core features help containerize R projects efficiently. Future vignettes cover: Advanced Dockerfile Manipulation: Modifying, grouping, sorting instructions Generating Dockerfiles Projects: Creating Dockerfiles R sessions, renv.lock files, DESCRIPTION files, R scripts Custom Templates: Creating using Dockerfile templates Multi-stage Builds: Creating optimized images multi-stage builds Best Practices: Guidelines creating efficient secure Docker images R package development, please refer back function documentation visit package website.","code":""},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Making a dockitect Dockerfile into a Running Container","text":"creating Dockerfile dockitect, next steps involve building Docker image running container. vignette walks process practical examples, assuming Docker installed system. haven’t installed Docker yet, visit Docker installation page instructions specific operating system.","code":""},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"building-your-docker-image","dir":"Articles","previous_headings":"","what":"Building Your Docker Image","title":"Making a dockitect Dockerfile into a Running Container","text":"’ve generated Dockerfile dockitect, ’ll need build Docker image . done interacting Docker command-line interface: -t option tags image name, making easier reference later. . end tells Docker look Dockerfile current directory. build process, Docker execute instruction Dockerfile sequentially create series intermediate layers. layers cached, means subsequent builds can much faster parts Dockerfile haven’t changed. Effective use layer caching can significantly speed Docker image builds.","code":"# Basic build command docker build -t my-r-project .  # Build with a specific tag (e.g., for versioning) docker build -t my-r-project:1.0.0 .  # Build with build arguments (if your Dockerfile uses ARG) docker build --build-arg R_VERSION=4.4.0 -t my-r-project ."},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"running-containers-based-on-your-image","dir":"Articles","previous_headings":"","what":"Running Containers Based on Your Image","title":"Making a dockitect Dockerfile into a Running Container","text":"building image, can run container using various configurations: ’s options : -: Provides interactive terminal -p 3838:3838: Maps port 3838 container port 3838 host -e \"DEBUG=TRUE\": Sets environment variable inside container -v $(pwd)/data:/app/data: Mounts local directory location container Shiny apps Plumber APIs, -p flag crucial maps port container host machine, allowing access web application.","code":"# Basic run command docker run my-r-project  # Run interactively with a shell docker run -it my-r-project bash  # Run with environment variables docker run -e \"DEBUG=TRUE\" my-r-project  # Run with a volume for data persistence docker run -v $(pwd)/data:/app/data my-r-project  # Run a Shiny app with port mapping docker run -p 3838:3838 my-shiny-app"},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"container-management","dir":"Articles","previous_headings":"","what":"Container Management","title":"Making a dockitect Dockerfile into a Running Container","text":"useful commands managing Docker containers images: can refer containers either ID (shown docker ps) name assigned running . don’t specify name --name starting container, Docker assigns random name.","code":"# List running containers docker ps  # List all containers (including stopped ones) docker ps -a  # Stop a running container docker stop <container_id>  # Remove a container docker rm <container_id>  # List images docker images  # Remove an image docker rmi my-r-project"},{"path":[]},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"complete-workflow-for-a-shiny-app","dir":"Articles","previous_headings":"Example Workflows","what":"Complete Workflow for a Shiny App","title":"Making a dockitect Dockerfile into a Running Container","text":"Let’s walk complete workflow containerizing Shiny application: , terminal: Now can access Shiny app navigating http://localhost:3838/app web browser.","code":"# 1. Generate the Dockerfile library(dockitect) dk_template_shiny(   r_version = \"4.4.0\",   port = 3838,   app_dir = \"shiny_app/\" ) |>   write_dockerfile() # 2. Build the Docker image ## Note: For ARM-based systems, use --platform linux/amd64. docker build --platform linux/amd64 -t my-shiny-app .  # 3. Run the container docker run -p 3838:3838 my-shiny-app"},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"running-an-r-script-with-volume-mounting","dir":"Articles","previous_headings":"Example Workflows","what":"Running an R Script with Volume Mounting","title":"Making a dockitect Dockerfile into a Running Container","text":"data analysis scripts, often want share data host container: , terminal: mounts local data results directories container, allowing R script read input data write results persist container exits.","code":"# 1. Generate the Dockerfile library(dockitect) dk_from_script(\"analysis.R\") |>   write_dockerfile() # 2. Build the Docker image docker build -t my-analysis .  # 3. Run with volume mounting for input/output docker run -v $(pwd)/data:/app/data -v $(pwd)/results:/app/results my-analysis"},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"running-an-r-environment-for-interactive-use","dir":"Articles","previous_headings":"Example Workflows","what":"Running an R Environment for Interactive Use","title":"Making a dockitect Dockerfile into a Running Container","text":"interactive data analysis, might want container specific packages dependencies: terminal: gives interactive R session packages pre-installed, current directory mounted can access files.","code":"# 1. Generate a Dockerfile with your packages library(dockitect) dk_template_base(   r_version = \"4.4.3\",   additional_pkgs = c(\"visualize\") ) |>   write_dockerfile() # 2. Build the image docker build -t r-interactive .  # 3. Run interactively with volume mount for your project files docker run -it -v $(pwd):/app r-interactive R"},{"path":[]},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"build-fails-with-package-installation-errors","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Build Fails with Package Installation Errors","title":"Making a dockitect Dockerfile into a Running Container","text":"build fails package installation, might due missing system dependencies. dk_add_sysreqs() function dockitect can help :","code":"# Add system requirements for specific packages df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.3\") |>   dk_add_sysreqs(c(\"tidyverse\", \"rJava\"))"},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"container-exits-immediately","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Container Exits Immediately","title":"Making a dockitect Dockerfile into a Running Container","text":"container exits immediately starting, might CMD instruction Dockerfile designed keep container running. services, ensure CMD runs process stays foreground.","code":""},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"cannot-access-shiny-app-or-plumber-api","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Cannot Access Shiny App or Plumber API","title":"Making a dockitect Dockerfile into a Running Container","text":"Make sure ’ve mapped ports correctly -p flag application configured listen interfaces inside container. Shiny apps, can set :","code":"options(shiny.host = '0.0.0.0')"},{"path":"/articles/making-a-dockitect-dockerfile-into-a-running-container.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Making a dockitect Dockerfile into a Running Container","text":"dockitect simplifies Dockerfile creation, understanding build, run, manage Docker containers required complete workflow. vignette covered basics working Docker generating Dockerfile via dockitect. information, consult Docker documentation Rocker project provides pre-built Docker images R.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Joseph Balamuta. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2025). dockitect: Create Validate Dockerfiles Programmatically. R package version 0.0.1, https://github.com/coatless-rpkg/dockitect, https://r-pkg.thecoatlessprofessor.com/dockitect/.","code":"@Manual{,   title = {dockitect: Create and Validate Dockerfiles Programmatically},   author = {James Joseph Balamuta},   year = {2025},   note = {R package version 0.0.1, https://github.com/coatless-rpkg/dockitect},   url = {https://r-pkg.thecoatlessprofessor.com/dockitect/}, }"},{"path":"/index.html","id":"dockitect-","dir":"","previous_headings":"","what":"Create and Validate Dockerfiles Programmatically","title":"Create and Validate Dockerfiles Programmatically","text":"dockitect R package programmatically creating, validating, managing Dockerfiles using pipe-friendly syntax. bridges gap R development containerization, enabling seamless Docker integration data science workflows. [!IMPORTANT] package currently prototype/experimental stage. yet available CRAN may bugs limitations.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create and Validate Dockerfiles Programmatically","text":"can install development version dockitect GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"coatless-rpkg/dockitect\")"},{"path":"/index.html","id":"design-philosophy","dir":"","previous_headings":"","what":"Design Philosophy","title":"Create and Validate Dockerfiles Programmatically","text":"make API intuitive discoverable, dockitect employs naming convention across functions. Understanding prefixes help navigate package find functions need: dfi_*() - Dockerfile instruction functions (e.g., dfi_from(), dfi_run()) dfm_*() - Dockerfile modification functions (e.g., dfm_add_line(), dfm_group_similar()) di_*() - Dockerignore functions (e.g., di_add(), di_remove()) dk_*() - Docker configuration/template functions (e.g., dk_from_session(), dk_template_shiny())","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create and Validate Dockerfiles Programmatically","text":"following examples demonstrate use dockitect various containerization scenarios. example showcases different aspects package’s functionality, basic Dockerfile creation advanced use cases.","code":""},{"path":"/index.html","id":"dockerfile-creation","dir":"","previous_headings":"Usage","what":"Dockerfile Creation","title":"Create and Validate Dockerfiles Programmatically","text":"Let’s start fundamentals. Creating Dockerfile typically involves specifying base image, installing dependencies, copying files, defining commands. dockitect, process becomes series intuitive pipe-chained functions. example, let’s create Dockerfile R script:","code":"library(dockitect)  # Create a basic Dockerfile for an R script df_rscript <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.3\") |>   dfi_label(maintainer = \"user@example.com\") |>   dfi_run(\"apt-get update && apt-get install -y libcurl4-openssl-dev\") |>   dfi_workdir(\"/app\") |>   dfi_copy(\"analysis.R\", \"/app/\") |>   dfi_cmd(\"Rscript /app/analysis.R\")  df_rscript #> FROM rocker/r-ver:4.4.3 #> LABEL maintainer=\"user@example.com\" #> RUN apt-get update && apt-get install -y libcurl4-openssl-dev #> WORKDIR /app #> COPY analysis.R /app/ #> CMD Rscript /app/analysis.R  ## Write the Dockerfile to disk # write_dockerfile(df_rscript)"},{"path":"/index.html","id":"use-templates","dir":"","previous_headings":"Usage","what":"Use Templates","title":"Create and Validate Dockerfiles Programmatically","text":"dockitect includes specialized templates common R application types, saving time ensuring best practices followed. templates fully customizable provide solid foundation projects.","code":""},{"path":"/index.html","id":"shiny-application","dir":"","previous_headings":"Usage > Use Templates","what":"Shiny Application","title":"Create and Validate Dockerfiles Programmatically","text":"Creating Docker container Shiny application requires specific configurations ports, networking, dependencies. Shiny template handles details automatically. example, can create Dockerfile Shiny app proper port configuration:","code":"# Create a Dockerfile for a Shiny app dk_template_shiny(   r_version = \"4.4.3\",       # Specify R version   port = 3838,               # Expose Shiny port   app_dir = \"app/\"           # Location of app files ) |>   dfi_env(SHINY_HOST = \"0.0.0.0\") |>  # Configure Shiny to listen on all interfaces   write_dockerfile()"},{"path":"/index.html","id":"custom-templates","dir":"","previous_headings":"Usage","what":"Custom Templates","title":"Create and Validate Dockerfiles Programmatically","text":"dockitect includes templates common scenarios, organization might specific containerization patterns. template system extensible, allowing create, register, reuse templates throughout projects:","code":"# Create a custom template function my_template <- function(my_param = \"default\") {   dockerfile() |>     dfi_from(\"rocker/r-ver:4.4.3\") |>     dfi_run(paste0(\"echo \", my_param)) }  # Register the template dk_register_template(\"my_template\", my_template)  # Use the template dk_template_custom(\"my_template\", my_param = \"hello\") |>   write_dockerfile()"},{"path":"/index.html","id":"modify-existing-dockerfiles","dir":"","previous_headings":"Usage","what":"Modify Existing Dockerfiles","title":"Create and Validate Dockerfiles Programmatically","text":"Sometimes need modify existing Dockerfiles rather creating scratch. dockitect provides specialized functions reading, modifying, writing Dockerfiles, allowing precise changes without manual text editing:","code":"# Read an existing Dockerfile df <- read_dockerfile(\"path/to/Dockerfile\")  # Modify it df |>   dfm_remove_line(5) |>                                # Remove line 5   dfm_group_similar() |>                               # Group similar commands (e.g., RUN)   write_dockerfile(\"Dockerfile.new\")                   # Write to a new file"},{"path":"/index.html","id":"create-and-manage-dockerignore","dir":"","previous_headings":"Usage","what":"Create and Manage .dockerignore","title":"Create and Validate Dockerfiles Programmatically","text":"Docker builds can slowed unnecessarily including large irrelevant files build context. properly configured .dockerignore file helps keep builds fast images small. dockitect makes easy create maintain .dockerignore file dockerignore().","code":"# Create a .dockerignore file with common patterns dockerignore() |>   dk_template_ignore_common(git = TRUE, r = TRUE) |>  # Add common patterns for Git and R   di_add(\"*.log\") |>                                  # Add custom patterns   di_add(\"output/\") |>   write_dockerignore()"},{"path":"/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related Packages","title":"Create and Validate Dockerfiles Programmatically","text":"dockitect part broader ecosystem tools containerization environment management R. Depending specific needs, might want explore complementary packages: containerit: alternative approach generating Dockerfiles, focus reproducible research workflows dockerfiler: Another R package Dockerfile generation uses different syntax approach renv: R package dependency management, pairs well dockitect fully reproducible environments","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Create and Validate Dockerfiles Programmatically","text":"use dockitect research project, please consider citing :","code":"citation(\"dockitect\")"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Create and Validate Dockerfiles Programmatically","text":"AGPL (>=3)","code":""},{"path":"/reference/add_dockerfile_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a line to a dockerfile and update metadata — add_dockerfile_line","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"Adds line dockerfile updates metadata based instruction. internal function used specific dfi_* functions.","code":""},{"path":"/reference/add_dockerfile_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"","code":"add_dockerfile_line(dockerfile, instruction, args)"},{"path":"/reference/add_dockerfile_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"dockerfile dockerfile object instruction Docker instruction (e.g., \"\", \"RUN\") args Arguments instruction","code":""},{"path":"/reference/add_dockerfile_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"Updated dockerfile object new line updated metadata","code":""},{"path":"/reference/add_dockerfile_line.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a line to a dockerfile and update metadata — add_dockerfile_line","text":"internal function handles: Adding instruction proper formatting Handling multi-line arguments appropriate indentation Updating metadata special instructions like instructions, extracts stores: Base image name Package manager Operating system R version (rocker/r-ver:version images)","code":""},{"path":[]},{"path":"/reference/c.dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple dockerignore objects — c.dockerignore","title":"Combine multiple dockerignore objects — c.dockerignore","text":"Combine multiple dockerignore objects","code":""},{"path":"/reference/c.dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple dockerignore objects — c.dockerignore","text":"","code":"# S3 method for class 'dockerignore' c(...)"},{"path":"/reference/c.dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple dockerignore objects — c.dockerignore","text":"... Dockerignore objects combine","code":""},{"path":"/reference/c.dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple dockerignore objects — c.dockerignore","text":"new dockerignore object combined patterns","code":""},{"path":"/reference/check_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an object is a dockerfile — check_dockerfile","title":"Ensure an object is a dockerfile — check_dockerfile","text":"Verifies provided object valid dockerfile class object, throwing error . Useful validation inside functions expect dockerfile objects.","code":""},{"path":"/reference/check_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an object is a dockerfile — check_dockerfile","text":"","code":"check_dockerfile(dockerfile)"},{"path":"/reference/check_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an object is a dockerfile — check_dockerfile","text":"dockerfile Object check","code":""},{"path":"/reference/check_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an object is a dockerfile — check_dockerfile","text":"Invisibly returns TRUE valid, otherwise throws error","code":""},{"path":[]},{"path":"/reference/check_dockerfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure an object is a dockerfile — check_dockerfile","text":"","code":"df <- dockerfile() check_dockerfile(df) if (FALSE) { # \\dontrun{ # This would throw an error check_dockerfile(list()) } # }"},{"path":"/reference/check_dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an object is a dockerignore — check_dockerignore","title":"Ensure an object is a dockerignore — check_dockerignore","text":"Ensure object dockerignore","code":""},{"path":"/reference/check_dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an object is a dockerignore — check_dockerignore","text":"","code":"check_dockerignore(dockerignore)"},{"path":"/reference/check_dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an object is a dockerignore — check_dockerignore","text":"dockerignore Object check","code":""},{"path":"/reference/check_dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an object is a dockerignore — check_dockerignore","text":"Invisible TRUE valid, error otherwise","code":""},{"path":"/reference/determine_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the operating system from a base image — determine_os","title":"Determine the operating system from a base image — determine_os","text":"Determine operating system base image","code":""},{"path":"/reference/determine_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the operating system from a base image — determine_os","text":"","code":"determine_os(base_image)"},{"path":"/reference/determine_os.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the operating system from a base image — determine_os","text":"base_image Base image name","code":""},{"path":"/reference/determine_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the operating system from a base image — determine_os","text":"Character string OS type (e.g., \"ubuntu\", \"centos\", \"debian\")","code":""},{"path":"/reference/determine_package_manager.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the package manager from a base image — determine_package_manager","title":"Determine the package manager from a base image — determine_package_manager","text":"Determine package manager base image","code":""},{"path":"/reference/determine_package_manager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the package manager from a base image — determine_package_manager","text":"","code":"determine_package_manager(base_image)"},{"path":"/reference/determine_package_manager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the package manager from a base image — determine_package_manager","text":"base_image Base image name","code":""},{"path":"/reference/determine_package_manager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the package manager from a base image — determine_package_manager","text":"Character string package manager type (\"apt\", \"yum\", \"apk\", etc.)","code":""},{"path":"/reference/dfi_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ADD instruction to a dockerfile — dfi_add","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"Adds ADD instruction copy files, directories, remote files source container's filesystem destination.","code":""},{"path":"/reference/dfi_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"","code":"dfi_add(dockerfile, src, dest)"},{"path":"/reference/dfi_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"dockerfile dockerfile object src Source path (can URL tar archive) dest Destination path container","code":""},{"path":"/reference/dfi_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"updated dockerfile object ADD instruction added","code":""},{"path":"/reference/dfi_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"ADD similar COPY, additional features: src URL, file downloaded URL src local tar archive, automatically unpacked Note COPY generally preferred simple file copying explicit fewer side effects ADD.","code":""},{"path":[]},{"path":"/reference/dfi_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an ADD instruction to a dockerfile — dfi_add","text":"","code":"# Add a local file df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_add(\"local.txt\", \"/app/local.txt\")    # Add a file from a URL df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_add(\"https://example.com/file.txt\", \"/app/file.txt\")"},{"path":"/reference/dfi_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ARG instruction to a dockerfile — dfi_arg","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"Adds ARG instruction define variable users can pass build-time builder using --build-arg flag.","code":""},{"path":"/reference/dfi_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"","code":"dfi_arg(dockerfile, name, default = NULL)"},{"path":"/reference/dfi_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"dockerfile dockerfile object name Argument name default Default value (optional)","code":""},{"path":"/reference/dfi_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"updated dockerfile object ARG instruction added","code":""},{"path":"/reference/dfi_arg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"Build arguments available build Docker image container running. can used parameterize build process, allowing users specify values like versions configuration options build time. building image, use:","code":"docker build --build-arg R_VERSION=4.4.0 -t my-image ."},{"path":[]},{"path":"/reference/dfi_arg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an ARG instruction to a dockerfile — dfi_arg","text":"","code":"# Define an argument with no default df <- dockerfile() |>   dfi_arg(\"R_VERSION\") |>   dfi_from(paste0(\"rocker/r-ver:\", \"$R_VERSION\")) df #> ARG R_VERSION #> FROM rocker/r-ver:$R_VERSION      # Define an argument with a default value df <- dockerfile() |>   dfi_arg(\"R_VERSION\", \"4.4.0\") |>   dfi_from(paste0(\"rocker/r-ver:\", \"$R_VERSION\")) df #> ARG R_VERSION=4.4.0 #> FROM rocker/r-ver:$R_VERSION"},{"path":"/reference/dfi_cmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a CMD instruction to a dockerfile — dfi_cmd","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"Adds CMD instruction provide defaults executing container. defaults can executable programs commands executed container starts.","code":""},{"path":"/reference/dfi_cmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"","code":"dfi_cmd(dockerfile, command)"},{"path":"/reference/dfi_cmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"dockerfile dockerfile object command Command run (character vector string)","code":""},{"path":"/reference/dfi_cmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"updated dockerfile object CMD instruction added","code":""},{"path":"/reference/dfi_cmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"function automatically converts command JSON array format, recommended approach better signal handling. one CMD instruction effective Dockerfile; multiple specified, last one take effect.","code":""},{"path":[]},{"path":"/reference/dfi_cmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a CMD instruction to a dockerfile — dfi_cmd","text":"","code":"# Simple command df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_copy(\"script.R\", \"/app/script.R\") |>   dfi_cmd(\"Rscript /app/script.R\")  # Array format (recommended) df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_cmd(c(\"R\", \"--no-save\"))"},{"path":"/reference/dfi_copy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a COPY instruction to a dockerfile — dfi_copy","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"Adds COPY instruction copy files directories build context container's filesystem.","code":""},{"path":"/reference/dfi_copy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"","code":"dfi_copy(dockerfile, src, dest, from = NULL)"},{"path":"/reference/dfi_copy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"dockerfile dockerfile object src Source path (relative build context) dest Destination path (container) Build stage copy (optional, multi-stage builds)","code":""},{"path":"/reference/dfi_copy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"updated dockerfile object COPY instruction added","code":""},{"path":"/reference/dfi_copy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"COPY instruction copies new files directories src adds filesystem container path dest. used parameter, can copy files previous build stages multi-stage builds.","code":""},{"path":[]},{"path":"/reference/dfi_copy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a COPY instruction to a dockerfile — dfi_copy","text":"","code":"# Copy a single file df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_copy(\"script.R\", \"/app/script.R\")  # Copy from a previous build stage df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\", as = \"build\") |>   dfi_run(\"R -e \\\"install.packages('renv')\\\"\") |>   dfi_from(\"rocker/r-ver:4.4.0\", as = \"final\") |>   dfi_copy(\"/usr/local/lib/R/site-library/renv\",            \"/usr/local/lib/R/site-library/renv\",            from = \"build\")"},{"path":"/reference/dfi_entrypoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"Adds ENTRYPOINT instruction configure container run executable.","code":""},{"path":"/reference/dfi_entrypoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"","code":"dfi_entrypoint(dockerfile, entrypoint)"},{"path":"/reference/dfi_entrypoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"dockerfile dockerfile object entrypoint Entrypoint command (character vector string)","code":""},{"path":"/reference/dfi_entrypoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"updated dockerfile object ENTRYPOINT instruction added","code":""},{"path":"/reference/dfi_entrypoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"ENTRYPOINT instruction defines executable run container starts. command line arguments passed docker run appended entrypoint command. used together CMD, CMD instruction provides default arguments ENTRYPOINT command can overridden runtime. function automatically converts command JSON array format vector provided, recommended approach proper signal handling.","code":""},{"path":[]},{"path":"/reference/dfi_entrypoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an ENTRYPOINT instruction to a dockerfile — dfi_entrypoint","text":"","code":"# Simple entrypoint df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_entrypoint(\"R\") df #> FROM rocker/r-ver:4.4.0 #> ENTRYPOINT R      # Array format (recommended) df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_entrypoint(c(\"R\", \"--no-save\")) df #> FROM rocker/r-ver:4.4.0 #> ENTRYPOINT [\"R\",\"--no-save\"]"},{"path":"/reference/dfi_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ENV instruction to a dockerfile — dfi_env","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"Adds one ENV instructions set environment variables container.","code":""},{"path":"/reference/dfi_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"","code":"dfi_env(dockerfile, ...)"},{"path":"/reference/dfi_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"dockerfile dockerfile object ... Named environment variables","code":""},{"path":"/reference/dfi_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"updated dockerfile object ENV instructions added","code":""},{"path":"/reference/dfi_env.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"Environment variables set ENV persist throughout container's runtime. variable added separate ENV instruction Dockerfile, making easier track changes Docker build history.","code":""},{"path":[]},{"path":"/reference/dfi_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an ENV instruction to a dockerfile — dfi_env","text":"","code":"# Add a single environment variable df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_env(PATH = \"/usr/local/bin:$PATH\") df #> FROM rocker/r-ver:4.4.0 #> ENV PATH /usr/local/bin:$PATH    # Add multiple environment variables df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_env(     DEBIAN_FRONTEND = \"noninteractive\",     TZ = \"America/Chicago\",     LANG = \"en_US.UTF-8\"   ) df #> FROM rocker/r-ver:4.4.0 #> ENV DEBIAN_FRONTEND noninteractive #> ENV TZ America/Chicago #> ENV LANG en_US.UTF-8"},{"path":"/reference/dfi_expose.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an EXPOSE instruction to a dockerfile — dfi_expose","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"Adds EXPOSE instruction inform Docker container listen specified network ports runtime.","code":""},{"path":"/reference/dfi_expose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"","code":"dfi_expose(dockerfile, ports)"},{"path":"/reference/dfi_expose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"dockerfile dockerfile object ports Ports expose (numeric character vector)","code":""},{"path":"/reference/dfi_expose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"updated dockerfile object EXPOSE instruction added","code":""},{"path":"/reference/dfi_expose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"EXPOSE instruction actually publish port. functions documentation person builds image person runs container, ports intended published. actually publish port running container, use -p flag docker run command.","code":""},{"path":[]},{"path":"/reference/dfi_expose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an EXPOSE instruction to a dockerfile — dfi_expose","text":"","code":"# Expose a single port df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_expose(8080)    # Expose multiple ports df <- dockerfile() |>   dfi_from(\"rocker/shiny:4.4.0\") |>   dfi_expose(c(3838, 8080))"},{"path":"/reference/dfi_from.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a FROM instruction to a dockerfile — dfi_from","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"Adds instruction specify base image Docker build. typically first instruction Dockerfile.","code":""},{"path":"/reference/dfi_from.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"","code":"dfi_from(dockerfile, image, as = NULL)"},{"path":"/reference/dfi_from.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"dockerfile dockerfile object image Base image name (e.g., \"rocker/r-ver:4.4.0\") Name build stage (optional, multi-stage builds)","code":""},{"path":"/reference/dfi_from.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"updated dockerfile object instruction added","code":""},{"path":"/reference/dfi_from.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"instruction initializes new build stage sets base image. metadata dockerfile object (package manager, OS, R version) automatically updated based base image.","code":""},{"path":[]},{"path":"/reference/dfi_from.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a FROM instruction to a dockerfile — dfi_from","text":"","code":"# Use a specific R version df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") df #> FROM rocker/r-ver:4.4.0   # Use a multi-stage build df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\", as = \"build\") df #> FROM rocker/r-ver:4.4.0 AS build"},{"path":"/reference/dfi_healthcheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"Adds HEALTHCHECK instruction tell Docker test container still working properly.","code":""},{"path":"/reference/dfi_healthcheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"","code":"dfi_healthcheck(   dockerfile,   command,   interval = NULL,   timeout = NULL,   start_period = NULL,   retries = NULL )"},{"path":"/reference/dfi_healthcheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"dockerfile dockerfile object command Health check command interval Interval checks (e.g., \"30s\") timeout Timeout checks (e.g., \"5s\") start_period Initial grace period (e.g., \"5s\") retries Number retries","code":""},{"path":"/reference/dfi_healthcheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"updated dockerfile object HEALTHCHECK instruction added","code":""},{"path":"/reference/dfi_healthcheck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"HEALTHCHECK instruction tells Docker determine container healthy. command exit 0 container healthy, 1 unhealthy. particularly useful web applications services want ensure running correctly. Parameter meanings: interval: often run check (default: 30s) timeout: Maximum time check can take (default: 30s) start-period: Grace period counting retries (default: 0s) retries: Number consecutive failures needed mark unhealthy (default: 3)","code":""},{"path":[]},{"path":"/reference/dfi_healthcheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a HEALTHCHECK instruction to a dockerfile — dfi_healthcheck","text":"","code":"# Simple health check using curl df <- dockerfile() |>   dfi_from(\"rocker/shiny:4.4.0\") |>   dfi_healthcheck(\"curl -f http://localhost:3838/ || exit 1\",                    interval = \"30s\",                    timeout = \"10s\",                    retries = 3) df #> FROM rocker/shiny:4.4.0 #> HEALTHCHECK --interval=30s --timeout=10s --retries=3 CMD curl -f http://localhost:3838/ || exit 1"},{"path":"/reference/dfi_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a LABEL instruction to a dockerfile — dfi_label","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"Adds LABEL instruction include metadata Docker image.","code":""},{"path":"/reference/dfi_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"","code":"dfi_label(dockerfile, ...)"},{"path":"/reference/dfi_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"dockerfile dockerfile object ... Named labels key-value pairs","code":""},{"path":"/reference/dfi_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"updated dockerfile object LABEL instruction added","code":""},{"path":"/reference/dfi_label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"Labels key-value pairs add metadata image. can used organize images, record licensing information, annotate build information, help image automation. Common label conventions include: maintainer: person responsible image org.opencontainers.image.authors: Image authors org.opencontainers.image.version: Version packaged software org.opencontainers.image.source: URL source code","code":""},{"path":[]},{"path":"/reference/dfi_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a LABEL instruction to a dockerfile — dfi_label","text":"","code":"# Add a single label df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_label(maintainer = \"user@example.com\") df #> FROM rocker/r-ver:4.4.0 #> LABEL maintainer=\"user@example.com\"   # Add multiple labels df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_label(     maintainer = \"user@example.com\",     version = \"1.0.0\",     description = \"Example R application\",     org.opencontainers.image.source = \"https://github.com/user/repo\"   ) df #> FROM rocker/r-ver:4.4.0 #> LABEL maintainer=\"user@example.com\" version=\"1.0.0\" description=\"Example R application\" org.opencontainers.image.source=\"https://github.com/user/repo\""},{"path":"/reference/dfi_maintainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"Adds MAINTAINER instruction specify author image. instruction deprecated favor using LABEL maintainer=....","code":""},{"path":"/reference/dfi_maintainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"","code":"dfi_maintainer(dockerfile, maintainer)"},{"path":"/reference/dfi_maintainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"dockerfile dockerfile object maintainer Maintainer info (e.g., \"Name email@example.com\")","code":""},{"path":"/reference/dfi_maintainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"updated dockerfile object MAINTAINER instruction added","code":""},{"path":"/reference/dfi_maintainer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"MAINTAINER instruction deprecated since Docker 1.13.0 (2017) favor using LABEL maintainer=.... function provided compatibility older Dockerfiles, new Dockerfiles use dfi_label(maintainer = ...) instead.","code":""},{"path":[]},{"path":"/reference/dfi_maintainer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a MAINTAINER instruction to a dockerfile (deprecated) — dfi_maintainer","text":"","code":"# Using the deprecated MAINTAINER instruction df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_maintainer(\"John Doe <john@example.com>\") #> Warning: MAINTAINER is deprecated. Use `dfi_label(maintainer = ...)` instead. df #> FROM rocker/r-ver:4.4.0 #> MAINTAINER John Doe <john@example.com>      # Better approach using LABEL df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_label(maintainer = \"John Doe <john@example.com>\") df #> FROM rocker/r-ver:4.4.0 #> LABEL maintainer=\"John Doe <john@example.com>\""},{"path":"/reference/dfi_onbuild.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"Adds ONBUILD instruction register trigger instructions executed later, image used base another build.","code":""},{"path":"/reference/dfi_onbuild.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"","code":"dfi_onbuild(dockerfile, instruction)"},{"path":"/reference/dfi_onbuild.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"dockerfile dockerfile object instruction Instruction run build (without instruction name)","code":""},{"path":"/reference/dfi_onbuild.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"updated dockerfile object ONBUILD instruction added","code":""},{"path":"/reference/dfi_onbuild.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"ONBUILD instruction registers trigger instruction executed image used base another build. trigger executed context downstream build, inserted immediately instruction downstream Dockerfile. useful creating \"builder\" images can set common build environment applications. Note: ONBUILD instructions inherited \"grand-children\" builds.","code":""},{"path":[]},{"path":"/reference/dfi_onbuild.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an ONBUILD instruction to a dockerfile — dfi_onbuild","text":"","code":"# Add ONBUILD triggers for package installation df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_onbuild(\"COPY renv.lock /app/renv.lock\") |>   dfi_onbuild(\"RUN R -e \\\"renv::restore()\\\"\") df #> FROM rocker/r-ver:4.4.0 #> ONBUILD COPY renv.lock /app/renv.lock #> ONBUILD RUN R -e \"renv::restore()\""},{"path":"/reference/dfi_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a RUN instruction to a dockerfile — dfi_run","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"Adds RUN instruction execute commands new layer top current image commit results.","code":""},{"path":"/reference/dfi_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"","code":"dfi_run(dockerfile, commands)"},{"path":"/reference/dfi_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"dockerfile dockerfile object commands Commands run (character vector multiple commands)","code":""},{"path":"/reference/dfi_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"updated dockerfile object RUN instruction added","code":""},{"path":"/reference/dfi_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"providing multiple commands character vector, properly formatted line continuations Dockerfile. recommended approach package installations reduce number layers final image.","code":""},{"path":[]},{"path":"/reference/dfi_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a RUN instruction to a dockerfile — dfi_run","text":"","code":"# Single command df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_run(\"apt update\") df #> FROM rocker/r-ver:4.4.0 #> RUN apt update   # Multiple commands in a single RUN (better practice) df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_run(c(     \"apt update\",     \"apt install -y --no-install-recommends libcurl4-openssl-dev\",     \"apt clean\",     \"rm -rf /var/lib/apt/lists/*\"   ))"},{"path":"/reference/dfi_shell.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a SHELL instruction to a dockerfile — dfi_shell","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"Adds SHELL instruction override default shell used commands.","code":""},{"path":"/reference/dfi_shell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"","code":"dfi_shell(dockerfile, shell)"},{"path":"/reference/dfi_shell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"dockerfile dockerfile object shell Shell command parameters (character vector string)","code":""},{"path":"/reference/dfi_shell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"updated dockerfile object SHELL instruction added","code":""},{"path":"/reference/dfi_shell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"SHELL instruction allows overriding default shell used shell form commands. default shell Linux [\"/bin/sh\", \"-c\"], Windows [\"cmd\", \"/S\", \"/C\"]. instruction particularly useful : Using bash-specific features Enabling better error handling options like -e (exit error) Setting pipefail catch errors pipelines function automatically converts shell command JSON array format provided vector.","code":""},{"path":[]},{"path":"/reference/dfi_shell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a SHELL instruction to a dockerfile — dfi_shell","text":"","code":"# Set shell to bash with expanded error messaging df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_shell(c(\"/bin/bash\", \"-e\", \"-o\", \"pipefail\", \"-c\")) df #> FROM rocker/r-ver:4.4.0 #> SHELL [\"/bin/bash\",\"-e\",\"-o\",\"pipefail\",\"-c\"]"},{"path":"/reference/dfi_stopsignal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"Adds STOPSIGNAL instruction set system call signal sent container exit.","code":""},{"path":"/reference/dfi_stopsignal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"","code":"dfi_stopsignal(dockerfile, signal)"},{"path":"/reference/dfi_stopsignal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"dockerfile dockerfile object signal Signal stopping container (e.g., \"SIGTERM\", \"9\")","code":""},{"path":"/reference/dfi_stopsignal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"updated dockerfile object STOPSIGNAL instruction added","code":""},{"path":"/reference/dfi_stopsignal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"STOPSIGNAL instruction sets system call signal sent container request exit. signal can specified signal name format SIGNAME (e.g., SIGTERM), unsigned number (e.g., 15). default, Docker sends SIGTERM containers need stopped. container exit within timeout period (default 10 seconds), Docker sends SIGKILL forcibly terminate .","code":""},{"path":[]},{"path":"/reference/dfi_stopsignal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a STOPSIGNAL instruction to a dockerfile — dfi_stopsignal","text":"","code":"# Set SIGTERM as the stop signal df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_stopsignal(\"SIGTERM\") df #> FROM rocker/r-ver:4.4.0 #> STOPSIGNAL SIGTERM      # Set using signal number df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_stopsignal(\"15\") df #> FROM rocker/r-ver:4.4.0 #> STOPSIGNAL 15"},{"path":"/reference/dfi_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a USER instruction to a dockerfile — dfi_user","title":"Add a USER instruction to a dockerfile — dfi_user","text":"Adds USER instruction set user UID use running subsequent instructions default user container.","code":""},{"path":"/reference/dfi_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a USER instruction to a dockerfile — dfi_user","text":"","code":"dfi_user(dockerfile, user, group = NULL)"},{"path":"/reference/dfi_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a USER instruction to a dockerfile — dfi_user","text":"dockerfile dockerfile object user Username UID group Group GID (optional)","code":""},{"path":"/reference/dfi_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a USER instruction to a dockerfile — dfi_user","text":"updated dockerfile object USER instruction added","code":""},{"path":"/reference/dfi_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a USER instruction to a dockerfile — dfi_user","text":"USER instruction sets user optionally user group subsequent instructions Dockerfile, default user running container. important security, best practice run containers non-root users possible. user specified exist container, need create first using RUN instruction.","code":""},{"path":[]},{"path":"/reference/dfi_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a USER instruction to a dockerfile — dfi_user","text":"","code":"# Set user by name df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_user(\"r-user\") df #> FROM rocker/r-ver:4.4.0 #> USER r-user     # Set user and group by ID df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_user(1000, 1000) df  #> FROM rocker/r-ver:4.4.0 #> USER 1000:1000"},{"path":"/reference/dfi_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a VOLUME instruction to a dockerfile — dfi_volume","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"Adds VOLUME instruction create mount point specified name mark holding externally mounted volumes.","code":""},{"path":"/reference/dfi_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"","code":"dfi_volume(dockerfile, paths)"},{"path":"/reference/dfi_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"dockerfile dockerfile object paths Path(s) create volumes","code":""},{"path":"/reference/dfi_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"updated dockerfile object VOLUME instruction added","code":""},{"path":"/reference/dfi_volume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"VOLUME instruction creates mount point marks externally mounted. useful : Persistent data survive container restarts Data want share containers Data want access host Note actual binding host directories happens runtime using -v flag docker run, image build.","code":""},{"path":[]},{"path":"/reference/dfi_volume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a VOLUME instruction to a dockerfile — dfi_volume","text":"","code":"# Create a single volume df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_volume(\"/data\") df  #> FROM rocker/r-ver:4.4.0 #> VOLUME /data      # Create multiple volumes df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_volume(c(\"/data\", \"/output\", \"/config\")) df #> FROM rocker/r-ver:4.4.0 #> VOLUME [\"/data\",\"/output\",\"/config\"]"},{"path":"/reference/dfi_workdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"Adds WORKDIR instruction set working directory subsequent RUN, CMD, ENTRYPOINT, COPY, ADD instructions.","code":""},{"path":"/reference/dfi_workdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"","code":"dfi_workdir(dockerfile, path)"},{"path":"/reference/dfi_workdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"dockerfile dockerfile object path Working directory path container","code":""},{"path":"/reference/dfi_workdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"updated dockerfile object WORKDIR instruction added","code":""},{"path":"/reference/dfi_workdir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"WORKDIR instruction can used multiple times Dockerfile. relative path provided, relative previous WORKDIR instruction. directory exist, created.","code":""},{"path":[]},{"path":"/reference/dfi_workdir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a WORKDIR instruction to a dockerfile — dfi_workdir","text":"","code":"df <- dockerfile() |>   dfi_from(\"rocker/r-ver:4.4.0\") |>   dfi_workdir(\"/app\") |>   dfi_copy(\".\", \"/app/\")"},{"path":"/reference/dfm_add_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a line to a dockerfile at a specific position — dfm_add_line","title":"Add a line to a dockerfile at a specific position — dfm_add_line","text":"Add line dockerfile specific position","code":""},{"path":"/reference/dfm_add_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a line to a dockerfile at a specific position — dfm_add_line","text":"","code":"dfm_add_line(dockerfile, line, after = NULL)"},{"path":"/reference/dfm_add_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a line to a dockerfile at a specific position — dfm_add_line","text":"dockerfile dockerfile object line Line add Position add line (default: end)","code":""},{"path":"/reference/dfm_add_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a line to a dockerfile at a specific position — dfm_add_line","text":"Updated dockerfile object","code":""},{"path":"/reference/dfm_group_similar.html","id":null,"dir":"Reference","previous_headings":"","what":"Group similar instructions in a dockerfile — dfm_group_similar","title":"Group similar instructions in a dockerfile — dfm_group_similar","text":"Group similar instructions dockerfile","code":""},{"path":"/reference/dfm_group_similar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group similar instructions in a dockerfile — dfm_group_similar","text":"","code":"dfm_group_similar(dockerfile)"},{"path":"/reference/dfm_group_similar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group similar instructions in a dockerfile — dfm_group_similar","text":"dockerfile dockerfile object","code":""},{"path":"/reference/dfm_group_similar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group similar instructions in a dockerfile — dfm_group_similar","text":"Updated dockerfile object similar instructions grouped","code":""},{"path":"/reference/dfm_move_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a line in a dockerfile — dfm_move_line","title":"Move a line in a dockerfile — dfm_move_line","text":"Move line dockerfile","code":""},{"path":"/reference/dfm_move_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a line in a dockerfile — dfm_move_line","text":"","code":"dfm_move_line(dockerfile, from, to)"},{"path":"/reference/dfm_move_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a line in a dockerfile — dfm_move_line","text":"dockerfile dockerfile object Source line number Target position","code":""},{"path":"/reference/dfm_move_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move a line in a dockerfile — dfm_move_line","text":"Updated dockerfile object","code":""},{"path":"/reference/dfm_remove_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a line from a dockerfile — dfm_remove_line","title":"Remove a line from a dockerfile — dfm_remove_line","text":"Remove line dockerfile","code":""},{"path":"/reference/dfm_remove_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a line from a dockerfile — dfm_remove_line","text":"","code":"dfm_remove_line(dockerfile, line_num)"},{"path":"/reference/dfm_remove_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a line from a dockerfile — dfm_remove_line","text":"dockerfile dockerfile object line_num Line number remove","code":""},{"path":"/reference/dfm_remove_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a line from a dockerfile — dfm_remove_line","text":"Updated dockerfile object","code":""},{"path":"/reference/dfm_replace_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a line in a dockerfile — dfm_replace_line","title":"Replace a line in a dockerfile — dfm_replace_line","text":"Replace line dockerfile","code":""},{"path":"/reference/dfm_replace_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a line in a dockerfile — dfm_replace_line","text":"","code":"dfm_replace_line(dockerfile, line_num, new_line)"},{"path":"/reference/dfm_replace_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a line in a dockerfile — dfm_replace_line","text":"dockerfile dockerfile object line_num Line number replace new_line New line content","code":""},{"path":"/reference/dfm_replace_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a line in a dockerfile — dfm_replace_line","text":"Updated dockerfile object","code":""},{"path":"/reference/dfm_sort_by_instruction.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort instructions in a dockerfile by type — dfm_sort_by_instruction","title":"Sort instructions in a dockerfile by type — dfm_sort_by_instruction","text":"Sort instructions dockerfile type","code":""},{"path":"/reference/dfm_sort_by_instruction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort instructions in a dockerfile by type — dfm_sort_by_instruction","text":"","code":"dfm_sort_by_instruction(dockerfile, order = NULL)"},{"path":"/reference/dfm_sort_by_instruction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort instructions in a dockerfile by type — dfm_sort_by_instruction","text":"dockerfile dockerfile object order Custom order instructions (optional)","code":""},{"path":"/reference/dfm_sort_by_instruction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort instructions in a dockerfile by type — dfm_sort_by_instruction","text":"Updated dockerfile sorted instructions","code":""},{"path":"/reference/di_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add patterns to a dockerignore object — di_add","title":"Add patterns to a dockerignore object — di_add","text":"Add patterns dockerignore object","code":""},{"path":"/reference/di_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add patterns to a dockerignore object — di_add","text":"","code":"di_add(dockerignore, pattern)"},{"path":"/reference/di_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add patterns to a dockerignore object — di_add","text":"dockerignore dockerignore object pattern Character vector patterns add","code":""},{"path":"/reference/di_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add patterns to a dockerignore object — di_add","text":"Updated dockerignore object","code":""},{"path":"/reference/di_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove patterns from a dockerignore object — di_remove","title":"Remove patterns from a dockerignore object — di_remove","text":"Remove patterns dockerignore object","code":""},{"path":"/reference/di_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove patterns from a dockerignore object — di_remove","text":"","code":"di_remove(dockerignore, pattern)"},{"path":"/reference/di_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove patterns from a dockerignore object — di_remove","text":"dockerignore dockerignore object pattern Character vector patterns remove","code":""},{"path":"/reference/di_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove patterns from a dockerignore object — di_remove","text":"Updated dockerignore object","code":""},{"path":"/reference/di_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace patterns in a dockerignore object — di_replace","title":"Replace patterns in a dockerignore object — di_replace","text":"Replace patterns dockerignore object","code":""},{"path":"/reference/di_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace patterns in a dockerignore object — di_replace","text":"","code":"di_replace(dockerignore, old_pattern, new_pattern)"},{"path":"/reference/di_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace patterns in a dockerignore object — di_replace","text":"dockerignore dockerignore object old_pattern Pattern(s) replace new_pattern New pattern(s)","code":""},{"path":"/reference/di_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace patterns in a dockerignore object — di_replace","text":"Updated dockerignore object","code":""},{"path":"/reference/dk_add_sysreqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add system requirements for R packages to a dockerfile — dk_add_sysreqs","title":"Add system requirements for R packages to a dockerfile — dk_add_sysreqs","text":"Add system requirements R packages dockerfile","code":""},{"path":"/reference/dk_add_sysreqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add system requirements for R packages to a dockerfile — dk_add_sysreqs","text":"","code":"dk_add_sysreqs(dockerfile, packages, package_manager = \"auto\")"},{"path":"/reference/dk_add_sysreqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add system requirements for R packages to a dockerfile — dk_add_sysreqs","text":"dockerfile dockerfile object packages Character vector package names package_manager Package manager use (default: auto-detected)","code":""},{"path":"/reference/dk_add_sysreqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add system requirements for R packages to a dockerfile — dk_add_sysreqs","text":"Updated dockerfile object","code":""},{"path":"/reference/dk_from_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerfile from a DESCRIPTION file — dk_from_description","title":"Create a dockerfile from a DESCRIPTION file — dk_from_description","text":"Create dockerfile DESCRIPTION file","code":""},{"path":"/reference/dk_from_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerfile from a DESCRIPTION file — dk_from_description","text":"","code":"dk_from_description(   description_file = \"DESCRIPTION\",   r_version = NULL,   base_image = NULL,   include_sysreqs = TRUE )"},{"path":"/reference/dk_from_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerfile from a DESCRIPTION file — dk_from_description","text":"description_file Path DESCRIPTION file r_version R version use (default: DESCRIPTION) base_image Base image use (default: determined R version) include_sysreqs Include system requirements (default: TRUE)","code":""},{"path":"/reference/dk_from_description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerfile from a DESCRIPTION file — dk_from_description","text":"dockerfile object","code":""},{"path":"/reference/dk_from_renv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerfile from an renv.lock file — dk_from_renv","title":"Create a dockerfile from an renv.lock file — dk_from_renv","text":"Create dockerfile renv.lock file","code":""},{"path":"/reference/dk_from_renv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerfile from an renv.lock file — dk_from_renv","text":"","code":"dk_from_renv(   lock_file = \"renv.lock\",   r_version = NULL,   base_image = NULL,   include_sysreqs = TRUE )"},{"path":"/reference/dk_from_renv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerfile from an renv.lock file — dk_from_renv","text":"lock_file Path renv.lock file r_version R version use (default: lock file) base_image Base image use (default: determined R version) include_sysreqs Include system requirements (default: TRUE)","code":""},{"path":"/reference/dk_from_renv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerfile from an renv.lock file — dk_from_renv","text":"dockerfile object","code":""},{"path":"/reference/dk_from_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerfile from an R script — dk_from_script","title":"Create a dockerfile from an R script — dk_from_script","text":"Create dockerfile R script","code":""},{"path":"/reference/dk_from_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerfile from an R script — dk_from_script","text":"","code":"dk_from_script(   script_file,   base_image = \"rocker/r-ver:latest\",   include_sysreqs = TRUE )"},{"path":"/reference/dk_from_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerfile from an R script — dk_from_script","text":"script_file Path R script base_image Base image use (default: latest rocker/r-ver) include_sysreqs Include system requirements (default: TRUE)","code":""},{"path":"/reference/dk_from_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerfile from an R script — dk_from_script","text":"dockerfile object","code":""},{"path":"/reference/dk_from_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerfile from the current R session — dk_from_session","title":"Create a dockerfile from the current R session — dk_from_session","text":"Create dockerfile current R session","code":""},{"path":"/reference/dk_from_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerfile from the current R session — dk_from_session","text":"","code":"dk_from_session(   base_image = NULL,   include_packages = TRUE,   include_sysreqs = TRUE,   package_manager = \"auto\" )"},{"path":"/reference/dk_from_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerfile from the current R session — dk_from_session","text":"base_image Base image use (default: rocker/r-ver current R version) include_packages Include loaded packages (default: TRUE) include_sysreqs Include system requirements packages (default: TRUE) package_manager Package manager use (default: auto-detected)","code":""},{"path":"/reference/dk_from_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerfile from the current R session — dk_from_session","text":"dockerfile object","code":""},{"path":"/reference/dk_register_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a custom dockerfile template — dk_register_template","title":"Register a custom dockerfile template — dk_register_template","text":"Register custom dockerfile template","code":""},{"path":"/reference/dk_register_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a custom dockerfile template — dk_register_template","text":"","code":"dk_register_template(name, template_fn)"},{"path":"/reference/dk_register_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a custom dockerfile template — dk_register_template","text":"name Template name template_fn Function returns dockerfile","code":""},{"path":"/reference/dk_register_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a custom dockerfile template — dk_register_template","text":"Invisible TRUE successful","code":""},{"path":"/reference/dk_template_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a base R dockerfile template — dk_template_base","title":"Create a base R dockerfile template — dk_template_base","text":"Create base R dockerfile template","code":""},{"path":"/reference/dk_template_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a base R dockerfile template — dk_template_base","text":"","code":"dk_template_base(r_version = NULL, additional_pkgs = NULL)"},{"path":"/reference/dk_template_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a base R dockerfile template — dk_template_base","text":"r_version R version use (default: current version) additional_pkgs Additional R packages install","code":""},{"path":"/reference/dk_template_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a base R dockerfile template — dk_template_base","text":"dockerfile object","code":""},{"path":"/reference/dk_template_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerfile from a custom template — dk_template_custom","title":"Create a dockerfile from a custom template — dk_template_custom","text":"Create dockerfile custom template","code":""},{"path":"/reference/dk_template_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerfile from a custom template — dk_template_custom","text":"","code":"dk_template_custom(template_name, ...)"},{"path":"/reference/dk_template_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerfile from a custom template — dk_template_custom","text":"template_name Name template ... Arguments pass template function","code":""},{"path":"/reference/dk_template_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerfile from a custom template — dk_template_custom","text":"dockerfile object","code":""},{"path":"/reference/dk_template_ignore_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for common ignore patterns — dk_template_ignore_common","title":"Create a dockerignore template for common ignore patterns — dk_template_ignore_common","text":"Creates comprehensive .dockerignore template patterns various file categories based selected options.","code":""},{"path":"/reference/dk_template_ignore_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for common ignore patterns — dk_template_ignore_common","text":"","code":"dk_template_ignore_common(   .dockerignore = NULL,   git = TRUE,   r = TRUE,   os = TRUE,   editor = FALSE,   node = FALSE,   python = FALSE,   data = FALSE )"},{"path":"/reference/dk_template_ignore_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for common ignore patterns — dk_template_ignore_common","text":".dockerignore Optional existing dockerignore object add patterns git Include Git-related files (default: TRUE) r Include R-related files (default: TRUE) os Include OS-specific files (default: TRUE) editor Include editor-specific files (default: FALSE) node Include Node.js-related files (default: FALSE) python Include Python-related files (default: FALSE) data Include data-related files (default: FALSE)","code":""},{"path":"/reference/dk_template_ignore_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for common ignore patterns — dk_template_ignore_common","text":"dockerignore object selected ignore patterns","code":""},{"path":"/reference/dk_template_ignore_common.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for common ignore patterns — dk_template_ignore_common","text":"function provides convenient way create comprehensive .dockerignore file tailored project's needs. category adds patterns relevant specific types files: git: Git repositories, .gitignore, etc. r: R history, RData, Rproj.user, etc. os: .DS_Store, Thumbs.db, etc. editor: .vscode, .idea, *.swp, etc. node: node_modules, package-lock.json, etc. python: pycache, *.pyc, venv, etc. data: *.csv, *.json, *.xlsx, etc.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_common.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for common ignore patterns — dk_template_ignore_common","text":"","code":"# Basic template with Git, R, and OS patterns di <- dk_template_ignore_common()  # Customize with additional categories di <- dk_template_ignore_common(   git = TRUE,   r = TRUE,   os = TRUE,   editor = TRUE,   data = TRUE )"},{"path":"/reference/dk_template_ignore_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for data-related files — dk_template_ignore_data","title":"Create a dockerignore template for data-related files — dk_template_ignore_data","text":"Creates `dockerignore“ template patterns ignore common data files directories.","code":""},{"path":"/reference/dk_template_ignore_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for data-related files — dk_template_ignore_data","text":"","code":"dk_template_ignore_data(.dockerignore = NULL, raw = TRUE)"},{"path":"/reference/dk_template_ignore_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for data-related files — dk_template_ignore_data","text":".dockerignore Optional existing dockerignore object add patterns raw Include raw data directories (default: TRUE)","code":""},{"path":"/reference/dk_template_ignore_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for data-related files — dk_template_ignore_data","text":"dockerignore object data-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for data-related files — dk_template_ignore_data","text":"template adds patterns ignore common data files directories often large can significantly slow Docker builds. includes patterns various data file formats: data/: Data directories *.csv, *.tsv: CSV TSV files *.xls*: Excel files *.db, *.sqlite*: Database files *.h5, *.hdf5: HDF5 files *.parquet, *.feather: Columnar storage formats *.json: JSON files *.pickle: Python pickle files *.rdata, *.rda: R data files raw = TRUE, also ignores common data directories: data-raw/, data/raw/: Raw data data/interim/: Intermediate processed data data/processed/: Final processed data data/external/: Data external sources","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for data-related files — dk_template_ignore_data","text":"","code":"# Create a new dockerignore with data patterns di <- dk_template_ignore_data()  # Exclude raw data directories di <- dk_template_ignore_data(raw = FALSE)"},{"path":"/reference/dk_template_ignore_editor.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for editor-related files — dk_template_ignore_editor","title":"Create a dockerignore template for editor-related files — dk_template_ignore_editor","text":"Creates dockerignore template patterns ignore files directories created common code editors IDEs.","code":""},{"path":"/reference/dk_template_ignore_editor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for editor-related files — dk_template_ignore_editor","text":"","code":"dk_template_ignore_editor(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_editor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for editor-related files — dk_template_ignore_editor","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_editor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for editor-related files — dk_template_ignore_editor","text":"dockerignore object editor-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_editor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for editor-related files — dk_template_ignore_editor","text":"template adds patterns ignore files directories created common code editors IDEs, including: VS Code: .vscode/, *.code-workspace JetBrains IDEs (e.g., RStudio, PyCharm): .idea/, *.iml, *.iws Sublime Text: *.sublime-workspace, *.sublime-project Vim: *.swp, *.swo, *~ Emacs: #*#, .#*, .projectile Eclipse: .classpath, .project, .settings/ Visual Studio: .vs/, *.suo, *.njsproj, *.sln files typically needed Docker image can reduce build context size.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_editor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for editor-related files — dk_template_ignore_editor","text":"","code":"# Create a new dockerignore with editor patterns di <- dk_template_ignore_editor() di #> .vscode/ #> *.code-workspace #> .idea/ #> *.iml #> *.iws #> *.ipr #> out/ #> *.sublime-workspace #> *.sublime-project #> *.swp #> *.swo #> *~ #> #*# #> .#* #> .projectile #> .classpath #> .project #> .settings/ #> .vs/ #> *.suo #> *.ntvs* #> *.njsproj #> *.sln #> *.sw?   # Add editor patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_editor() di #> *.log #> .vscode/ #> *.code-workspace #> .idea/ #> *.iml #> *.iws #> *.ipr #> out/ #> *.sublime-workspace #> *.sublime-project #> *.swp #> *.swo #> *~ #> #*# #> .#* #> .projectile #> .classpath #> .project #> .settings/ #> .vs/ #> *.suo #> *.ntvs* #> *.njsproj #> *.sln #> *.sw?"},{"path":"/reference/dk_template_ignore_git.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for Git-related files — dk_template_ignore_git","title":"Create a dockerignore template for Git-related files — dk_template_ignore_git","text":"Creates dockerignore template patterns ignore common Git-related files directories.","code":""},{"path":"/reference/dk_template_ignore_git.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for Git-related files — dk_template_ignore_git","text":"","code":"dk_template_ignore_git(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_git.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for Git-related files — dk_template_ignore_git","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_git.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for Git-related files — dk_template_ignore_git","text":"dockerignore object Git-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_git.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for Git-related files — dk_template_ignore_git","text":"template adds patterns ignore common Git-related files directories, including: .git/: Git repository directory .gitignore: Git ignore files .gitattributes: Git attributes file .github/: GitHub-specific files .gitlab-ci.yml: GitLab CI configuration files typically needed Docker image can reduce build context size.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_git.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for Git-related files — dk_template_ignore_git","text":"","code":"# Create a new dockerignore with Git patterns di <- dk_template_ignore_git() di #> .git/ #> .gitignore #> .gitattributes #> .github/ #> .gitlab-ci.yml   # Add Git patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_git() di #> *.log #> .git/ #> .gitignore #> .gitattributes #> .github/ #> .gitlab-ci.yml"},{"path":"/reference/dk_template_ignore_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for Node.js/JavaScript projects — dk_template_ignore_node","title":"Create a dockerignore template for Node.js/JavaScript projects — dk_template_ignore_node","text":"Creates dockerignore template patterns ignore Node.js JavaScript related files directories. `","code":""},{"path":"/reference/dk_template_ignore_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for Node.js/JavaScript projects — dk_template_ignore_node","text":"","code":"dk_template_ignore_node(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for Node.js/JavaScript projects — dk_template_ignore_node","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for Node.js/JavaScript projects — dk_template_ignore_node","text":"dockerignore object Node.js-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_node.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for Node.js/JavaScript projects — dk_template_ignore_node","text":"template adds patterns ignore Node.js JavaScript related files directories, including: node_modules/: Package dependencies npm-debug.log*, yarn-error.log*: Package manager logs package-lock.json, yarn.lock: Lock files .npm/, .yarn/: Cache directories *.tgz: Packaged modules .pnp.*: Plug'n'Play files .cache/: Build cache .eslintcache: ESLint cache files typically needed Docker image can regenerated build process. Ignoring can significantly reduce build context size, especially node_modules/ can large.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for Node.js/JavaScript projects — dk_template_ignore_node","text":"","code":"# Create a new dockerignore with Node.js patterns di <- dk_template_ignore_node() di  #> node_modules/ #> npm-debug.log* #> yarn-error.log* #> yarn-debug.log* #> package-lock.json #> yarn.lock #> .npm/ #> .yarn/ #> *.tgz #> .pnp.* #> .cache/ #> .eslintcache #> .node_repl_history   # Add Node.js patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_node() di #> *.log #> node_modules/ #> npm-debug.log* #> yarn-error.log* #> yarn-debug.log* #> package-lock.json #> yarn.lock #> .npm/ #> .yarn/ #> *.tgz #> .pnp.* #> .cache/ #> .eslintcache #> .node_repl_history"},{"path":"/reference/dk_template_ignore_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for OS-related files — dk_template_ignore_os","title":"Create a dockerignore template for OS-related files — dk_template_ignore_os","text":"Creates dockerignore template patterns ignore operating system specific files directories.","code":""},{"path":"/reference/dk_template_ignore_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for OS-related files — dk_template_ignore_os","text":"","code":"dk_template_ignore_os(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_os.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for OS-related files — dk_template_ignore_os","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for OS-related files — dk_template_ignore_os","text":"dockerignore object OS-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_os.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for OS-related files — dk_template_ignore_os","text":"template adds patterns ignore operating system specific files needed Docker image, including: .DS_Store: macOS folder metadata Thumbs.db: Windows thumbnail cache desktop.ini: Windows folder configuration *.swp, *~: Temporary editor files .directory: KDE folder metadata Icon?: macOS icon files *.lnk: Windows shortcuts files typically needed Docker image can reduce build context size.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_os.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for OS-related files — dk_template_ignore_os","text":"","code":"# Create a new dockerignore with OS patterns di <- dk_template_ignore_os() di #> .DS_Store #> Thumbs.db #> desktop.ini #> *.swp #> *~ #> .directory #> Icon? #> ehthumbs.db #> *.lnk   # Add OS patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_os() di #> *.log #> .DS_Store #> Thumbs.db #> desktop.ini #> *.swp #> *~ #> .directory #> Icon? #> ehthumbs.db #> *.lnk"},{"path":"/reference/dk_template_ignore_packrat.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for {packrat}-related files — dk_template_ignore_packrat","title":"Create a dockerignore template for {packrat}-related files — dk_template_ignore_packrat","text":"Creates dockerignore template patterns ignore {packrat} library source directories.","code":""},{"path":"/reference/dk_template_ignore_packrat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for {packrat}-related files — dk_template_ignore_packrat","text":"","code":"dk_template_ignore_packrat(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_packrat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for {packrat}-related files — dk_template_ignore_packrat","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_packrat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for {packrat}-related files — dk_template_ignore_packrat","text":"dockerignore object {packrat}-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_packrat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for {packrat}-related files — dk_template_ignore_packrat","text":"template adds patterns ignore {packrat} library source directories, typically needed Docker image. include: packrat/lib*/: Package libraries packrat/src/: Package sources using {packrat} Dockerfile, typically want copy just {packrat} configuration files use {packrat}'s restore functionality rebuild library inside container, rather copying entire library.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_packrat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for {packrat}-related files — dk_template_ignore_packrat","text":"","code":"# Create a new dockerignore with packrat patterns di <- dk_template_ignore_packrat()  # Add packrat patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_packrat()"},{"path":"/reference/dk_template_ignore_python.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for Python projects — dk_template_ignore_python","title":"Create a dockerignore template for Python projects — dk_template_ignore_python","text":"Creates dockerignore template patterns ignore Python related files directories.","code":""},{"path":"/reference/dk_template_ignore_python.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for Python projects — dk_template_ignore_python","text":"","code":"dk_template_ignore_python(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_python.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for Python projects — dk_template_ignore_python","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_python.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for Python projects — dk_template_ignore_python","text":"dockerignore object Python-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_python.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for Python projects — dk_template_ignore_python","text":"template adds patterns ignore Python related files directories, including: __pycache__/: Compiled Python files *.py[cod]: Python compiled files .pytest_cache/: PyTest cache .coverage, htmlcov/: Coverage reports .tox/, .nox/: Testing environments .venv/, venv/, ENV/: Virtual environments .Python, build/, dist/: Build artifacts .egg-info/, *.egg: Package metadata .ipynb_checkpoints/: Jupyter notebook checkpoints files typically needed Docker image can regenerated build process. Ignoring can significantly reduce build context size.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_python.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for Python projects — dk_template_ignore_python","text":"","code":"# Create a new dockerignore with Python patterns di <- dk_template_ignore_python()  # Add Python patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_python()"},{"path":"/reference/dk_template_ignore_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for R-related files — dk_template_ignore_r","title":"Create a dockerignore template for R-related files — dk_template_ignore_r","text":"Creates dockerignore template patterns ignore common R-related files directories.","code":""},{"path":"/reference/dk_template_ignore_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for R-related files — dk_template_ignore_r","text":"","code":"dk_template_ignore_r(.dockerignore = NULL, renv = TRUE, packrat = TRUE)"},{"path":"/reference/dk_template_ignore_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for R-related files — dk_template_ignore_r","text":".dockerignore Optional existing dockerignore object add patterns renv Include renv folders (default: TRUE) packrat Include packrat folders (default: TRUE)","code":""},{"path":"/reference/dk_template_ignore_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for R-related files — dk_template_ignore_r","text":"dockerignore object R-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_r.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for R-related files — dk_template_ignore_r","text":"template adds patterns ignore common R-related files directories needed Docker image, including: .Rproj.user/: RStudio user settings .Rhistory: R command history .RData: R workspace data .Ruserdata: R user data *.Rproj: RStudio project files *.rds: R serialized data files .Rcheck/: R package check directories renv = TRUE, also adds patterns ignore {renv} library directories, rebuilt inside container. packrat = TRUE, adds patterns ignore {packrat} library directories.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for R-related files — dk_template_ignore_r","text":"","code":"# Create a new dockerignore with R patterns di <- dk_template_ignore_r() di #> .Rproj.user/ #> .Rhistory #> .RData #> .Ruserdata #> *.Rproj #> *.rds #> .lintr #> *.Rcheck/ #> .Renviron #> .Rprofile #> renv/library/ #> renv/staging/ #> renv/python/ #> renv/local/ #> packrat/lib*/ #> packrat/src/   # Include R patterns but exclude package managers di <- dk_template_ignore_r(renv = FALSE, packrat = FALSE) di #> .Rproj.user/ #> .Rhistory #> .RData #> .Ruserdata #> *.Rproj #> *.rds #> .lintr #> *.Rcheck/ #> .Renviron #> .Rprofile"},{"path":"/reference/dk_template_ignore_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for raw data directories — dk_template_ignore_raw_data","title":"Create a dockerignore template for raw data directories — dk_template_ignore_raw_data","text":"Creates dockerignore template patterns ignore common raw data directories.","code":""},{"path":"/reference/dk_template_ignore_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for raw data directories — dk_template_ignore_raw_data","text":"","code":"dk_template_ignore_raw_data(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for raw data directories — dk_template_ignore_raw_data","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for raw data directories — dk_template_ignore_raw_data","text":"dockerignore object raw data directory patterns","code":""},{"path":"/reference/dk_template_ignore_raw_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for raw data directories — dk_template_ignore_raw_data","text":"template adds patterns ignore common raw data directories following usethis Cookiecutter Data Science conventions: data-raw/ data/raw/: Raw, immutable data data/interim/: Intermediate data transformed data/processed/: final, canonical data sets modeling data/external/: Data third party sources Raw data often large needed Docker image. Instead, usually better mount data volume runtime.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for raw data directories — dk_template_ignore_raw_data","text":"","code":"# Create a new dockerignore with raw data patterns di <- dk_template_ignore_raw_data()  # Add raw data patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_raw_data()"},{"path":"/reference/dk_template_ignore_renv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dockerignore template for {renv}-related files — dk_template_ignore_renv","title":"Create a dockerignore template for {renv}-related files — dk_template_ignore_renv","text":"Creates dockerignore template patterns ignore {renv} library cache directories.","code":""},{"path":"/reference/dk_template_ignore_renv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dockerignore template for {renv}-related files — dk_template_ignore_renv","text":"","code":"dk_template_ignore_renv(.dockerignore = NULL)"},{"path":"/reference/dk_template_ignore_renv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dockerignore template for {renv}-related files — dk_template_ignore_renv","text":".dockerignore Optional existing dockerignore object add patterns ","code":""},{"path":"/reference/dk_template_ignore_renv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dockerignore template for {renv}-related files — dk_template_ignore_renv","text":"dockerignore object {renv}-related ignore patterns","code":""},{"path":"/reference/dk_template_ignore_renv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a dockerignore template for {renv}-related files — dk_template_ignore_renv","text":"template adds patterns ignore {renv} library cache directories, typically needed Docker image. include: renv/library/: Package library renv/staging/: Staging area packages renv/python/: Python libraries renv/local/: Local cache using {renv} Dockerfile, typically want copy just renv.lock file use renv::restore() rebuild library inside container, rather copying entire library.","code":""},{"path":[]},{"path":"/reference/dk_template_ignore_renv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dockerignore template for {renv}-related files — dk_template_ignore_renv","text":"","code":"# Create a new dockerignore with renv patterns di <- dk_template_ignore_renv() di #> renv/library/ #> renv/staging/ #> renv/python/ #> renv/local/   # Add renv patterns to an existing dockerignore di <- dockerignore() |>   di_add(\"*.log\") |>   dk_template_ignore_renv() di #> *.log #> renv/library/ #> renv/staging/ #> renv/python/ #> renv/local/"},{"path":"/reference/dk_template_plumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Plumber API dockerfile template — dk_template_plumber","title":"Create a Plumber API dockerfile template — dk_template_plumber","text":"Create Plumber API dockerfile template","code":""},{"path":"/reference/dk_template_plumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Plumber API dockerfile template — dk_template_plumber","text":"","code":"dk_template_plumber(   r_version = NULL,   port = 8000,   api_file = \"plumber.R\",   additional_pkgs = NULL )"},{"path":"/reference/dk_template_plumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Plumber API dockerfile template — dk_template_plumber","text":"r_version R version use (default: current version) port Port expose (default: 8000) api_file Path plumber.R file (default: \"plumber.R\") additional_pkgs Additional R packages install","code":""},{"path":"/reference/dk_template_plumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Plumber API dockerfile template — dk_template_plumber","text":"dockerfile object","code":""},{"path":"/reference/dk_template_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Shiny app dockerfile template — dk_template_shiny","title":"Create a Shiny app dockerfile template — dk_template_shiny","text":"Create Shiny app dockerfile template","code":""},{"path":"/reference/dk_template_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Shiny app dockerfile template — dk_template_shiny","text":"","code":"dk_template_shiny(   r_version = NULL,   port = 3838,   app_dir = \".\",   additional_pkgs = NULL )"},{"path":"/reference/dk_template_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Shiny app dockerfile template — dk_template_shiny","text":"r_version R version use (default: current version) port Port expose (default: 3838) app_dir Local directory Shiny app (default: \".\") additional_pkgs Additional R packages install","code":""},{"path":"/reference/dk_template_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Shiny app dockerfile template — dk_template_shiny","text":"dockerfile object","code":""},{"path":"/reference/dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new dockerfile object — dockerfile","title":"Create a new dockerfile object — dockerfile","text":"Creates empty dockerfile object can populated Docker instructions.","code":""},{"path":"/reference/dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new dockerfile object — dockerfile","text":"","code":"dockerfile()"},{"path":"/reference/dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new dockerfile object — dockerfile","text":"dockerfile object following structure: lines: Character vector containing Dockerfile instructions metadata: List containing metadata Dockerfile: base_image: Base image name package_manager: Package manager type (e.g., \"apt\", \"yum\") r_version: R version (using rocker image) os: Operating system type","code":""},{"path":[]},{"path":"/reference/dockerfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new dockerfile object — dockerfile","text":"","code":"# Create a new dockerfile df <- dockerfile()  # Add instruction for a base image df <- dfi_from(df, \"rocker/r-ver:4.4.0\") df #> FROM rocker/r-ver:4.4.0   # Add an instruction to run a command to update system packages df <- dfi_run(df, \"apt update\") df #> FROM rocker/r-ver:4.4.0 #> RUN apt update"},{"path":"/reference/dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new dockerignore object — dockerignore","title":"Create a new dockerignore object — dockerignore","text":"Create new dockerignore object","code":""},{"path":"/reference/dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new dockerignore object — dockerignore","text":"","code":"dockerignore()"},{"path":"/reference/dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new dockerignore object — dockerignore","text":"new, empty dockerignore object","code":""},{"path":"/reference/dockitect-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"toolkit programmatically creating, modifying, validating Dockerfiles R. Provides pipe-friendly interface building Docker environments R sessions, packages, scripts, support templates automatic system requirement detection.","code":""},{"path":"/reference/dockitect-package.html","id":"dockerfile-instructions","dir":"Reference","previous_headings":"","what":"Dockerfile Instructions","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions adding Dockerfile instructions prefixed dfi_* follow pattern dfi_instruction(.dockerfile, ...).","code":""},{"path":"/reference/dockitect-package.html","id":"dockerfile-generators","dir":"Reference","previous_headings":"","what":"Dockerfile Generators","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions generating Dockerfiles various sources prefixed dk_* can create Dockerfiles R session, renv lockfile, DESCRIPTION file, R script.","code":""},{"path":"/reference/dockitect-package.html","id":"dockerfile-modifiers","dir":"Reference","previous_headings":"","what":"Dockerfile Modifiers","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions modifying Dockerfiles prefixed dfm_* allow adding, removing, replacing, moving lines within Dockerfile.","code":""},{"path":"/reference/dockitect-package.html","id":"dockerignore-management","dir":"Reference","previous_headings":"","what":"Dockerignore Management","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Functions managing .dockerignore files prefixed di_* allow adding removing patterns .dockerignore file.","code":""},{"path":[]},{"path":"/reference/dockitect-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dockitect: Create and Validate Dockerfiles Programmatically — dockitect-package","text":"Maintainer: James Joseph Balamuta james.balamuta@gmail.com (ORCID)","code":""},{"path":"/reference/generate_pkg_install_cmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate package installation commands for different package managers — generate_pkg_install_cmd","title":"Generate package installation commands for different package managers — generate_pkg_install_cmd","text":"Generate package installation commands different package managers","code":""},{"path":"/reference/generate_pkg_install_cmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate package installation commands for different package managers — generate_pkg_install_cmd","text":"","code":"generate_pkg_install_cmd(package_manager, packages)"},{"path":"/reference/generate_pkg_install_cmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate package installation commands for different package managers — generate_pkg_install_cmd","text":"package_manager Character string specifying package manager use packages Character vector packages install","code":""},{"path":"/reference/generate_pkg_install_cmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate package installation commands for different package managers — generate_pkg_install_cmd","text":"Character vector installation commands","code":""},{"path":"/reference/has_instruction.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a dockerfile has a specific instruction — has_instruction","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"Check dockerfile specific instruction","code":""},{"path":"/reference/has_instruction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"","code":"has_instruction(dockerfile, instruction)"},{"path":"/reference/has_instruction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"dockerfile dockerfile object instruction Instruction check (e.g., \"\", \"RUN\")","code":""},{"path":"/reference/has_instruction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a dockerfile has a specific instruction — has_instruction","text":"TRUE instruction exists, FALSE otherwise","code":""},{"path":"/reference/is_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is a dockerfile — is_dockerfile","title":"Test if an object is a dockerfile — is_dockerfile","text":"Checks whether provided object valid dockerfile class object.","code":""},{"path":"/reference/is_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is a dockerfile — is_dockerfile","text":"","code":"is_dockerfile(x)"},{"path":"/reference/is_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is a dockerfile — is_dockerfile","text":"x Object test","code":""},{"path":"/reference/is_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is a dockerfile — is_dockerfile","text":"TRUE x dockerfile object, FALSE otherwise","code":""},{"path":[]},{"path":"/reference/is_dockerfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if an object is a dockerfile — is_dockerfile","text":"","code":"df <- dockerfile() is_dockerfile(df) #> [1] TRUE is_dockerfile(list()) #> [1] FALSE"},{"path":"/reference/is_dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is a dockerignore — is_dockerignore","title":"Test if an object is a dockerignore — is_dockerignore","text":"Test object dockerignore","code":""},{"path":"/reference/is_dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is a dockerignore — is_dockerignore","text":"","code":"is_dockerignore(x)"},{"path":"/reference/is_dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is a dockerignore — is_dockerignore","text":"x Object test","code":""},{"path":"/reference/is_dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is a dockerignore — is_dockerignore","text":"TRUE x dockerignore, FALSE otherwise","code":""},{"path":"/reference/map_to_sysreqs_platform.html","id":null,"dir":"Reference","previous_headings":"","what":"Map package manager to sysreqs platform — map_to_sysreqs_platform","title":"Map package manager to sysreqs platform — map_to_sysreqs_platform","text":"Map package manager sysreqs platform","code":""},{"path":"/reference/map_to_sysreqs_platform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map package manager to sysreqs platform — map_to_sysreqs_platform","text":"","code":"map_to_sysreqs_platform(package_manager, os = NULL)"},{"path":"/reference/map_to_sysreqs_platform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map package manager to sysreqs platform — map_to_sysreqs_platform","text":"package_manager Package manager type os Operating system (known)","code":""},{"path":"/reference/map_to_sysreqs_platform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map package manager to sysreqs platform — map_to_sysreqs_platform","text":"Character string platform sysreqs","code":""},{"path":"/reference/print.dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for dockerfile objects — print.dockerfile","title":"Print method for dockerfile objects — print.dockerfile","text":"Displays contents dockerfile object readable format, showing instruction new line appear actual Dockerfile.","code":""},{"path":"/reference/print.dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for dockerfile objects — print.dockerfile","text":"","code":"# S3 method for class 'dockerfile' print(x, ...)"},{"path":"/reference/print.dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for dockerfile objects — print.dockerfile","text":"x dockerfile object ... Additional arguments (used)","code":""},{"path":"/reference/print.dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for dockerfile objects — print.dockerfile","text":"Invisibly returns dockerfile object","code":""},{"path":[]},{"path":"/reference/print.dockerfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for dockerfile objects — print.dockerfile","text":"","code":"# Create a new dockerfile and add a couple of instructions df <- dockerfile() |>   dfi_from(\"rocker/r-ver:latest\") |>   dfi_run(\"apt-get update\")  # Print the dockerfile print(df) #> FROM rocker/r-ver:latest #> RUN apt-get update"},{"path":"/reference/print.dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for dockerignore objects — print.dockerignore","title":"Print method for dockerignore objects — print.dockerignore","text":"Print method dockerignore objects","code":""},{"path":"/reference/print.dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for dockerignore objects — print.dockerignore","text":"","code":"# S3 method for class 'dockerignore' print(x, ...)"},{"path":"/reference/print.dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for dockerignore objects — print.dockerignore","text":"x dockerignore object ... Additional arguments (used)","code":""},{"path":"/reference/read_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Dockerfile from a file — read_dockerfile","title":"Read a Dockerfile from a file — read_dockerfile","text":"Read Dockerfile file","code":""},{"path":"/reference/read_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Dockerfile from a file — read_dockerfile","text":"","code":"read_dockerfile(file)"},{"path":"/reference/read_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Dockerfile from a file — read_dockerfile","text":"file Path Dockerfile","code":""},{"path":"/reference/read_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Dockerfile from a file — read_dockerfile","text":"dockerfile object","code":""},{"path":"/reference/read_dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a .dockerignore file — read_dockerignore","title":"Read a .dockerignore file — read_dockerignore","text":"Read .dockerignore file","code":""},{"path":"/reference/read_dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a .dockerignore file — read_dockerignore","text":"","code":"read_dockerignore(file = \".dockerignore\")"},{"path":"/reference/read_dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a .dockerignore file — read_dockerignore","text":"file Path .dockerignore file","code":""},{"path":"/reference/read_dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a .dockerignore file — read_dockerignore","text":"dockerignore object","code":""},{"path":"/reference/template_registry.html","id":null,"dir":"Reference","previous_headings":"","what":"Templates registry for storing custom templates — template_registry","title":"Templates registry for storing custom templates — template_registry","text":"Templates registry storing custom templates","code":""},{"path":"/reference/template_registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Templates registry for storing custom templates — template_registry","text":"","code":"template_registry"},{"path":"/reference/template_registry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Templates registry for storing custom templates — template_registry","text":"object class environment length 0.","code":""},{"path":"/reference/write_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a dockerfile to a file — write_dockerfile","title":"Write a dockerfile to a file — write_dockerfile","text":"Write dockerfile file","code":""},{"path":"/reference/write_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a dockerfile to a file — write_dockerfile","text":"","code":"write_dockerfile(dockerfile, file = \"Dockerfile\", multiline = TRUE)"},{"path":"/reference/write_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a dockerfile to a file — write_dockerfile","text":"dockerfile dockerfile object file Output file path (default: \"Dockerfile\") multiline Logical indicating long RUN commands split (default: TRUE)","code":""},{"path":"/reference/write_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a dockerfile to a file — write_dockerfile","text":"Invisible dockerfile object","code":""},{"path":"/reference/write_dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a dockerignore object to a file — write_dockerignore","title":"Write a dockerignore object to a file — write_dockerignore","text":"Write dockerignore object file","code":""},{"path":"/reference/write_dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a dockerignore object to a file — write_dockerignore","text":"","code":"write_dockerignore(dockerignore, file = \".dockerignore\")"},{"path":"/reference/write_dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a dockerignore object to a file — write_dockerignore","text":"dockerignore dockerignore object file Output file path (default: \".dockerignore\")","code":""},{"path":"/reference/write_dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a dockerignore object to a file — write_dockerignore","text":"Invisible dockerignore object","code":""}]
